<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N margin Items' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.'>
        <calculation class='tableau' formula='5.' />
      </column>
      <column caption='TON N Quantites' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
      <column caption='Sales Rep Parameter' datatype='integer' name='[Sales Rep Parameter]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' inline='true' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Amazon Cleaned Sales Data' name='excel-direct.1ajlspr0k8lpuh106ntjl0t359fd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/himan/OneDrive/Desktop/Amazon  (ineuron)/Amazon Cleaned Sales Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ajlspr0k8lpuh106ntjl0t359fd' name='Amazon Cleaned Sales Data' table='[&apos;Amazon Cleaned Sales Data$&apos;]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='CustKey' ordinal='1' />
            <column datatype='date' name='DateKey' ordinal='2' />
            <column datatype='real' name='Discount Amount' ordinal='3' />
            <column datatype='date' name='Invoice Date' ordinal='4' />
            <column datatype='integer' name='Invoice Number' ordinal='5' />
            <column datatype='string' name='Item Class' ordinal='6' />
            <column datatype='integer' name='Item Number' ordinal='7' />
            <column datatype='string' name='Item' ordinal='8' />
            <column datatype='integer' name='Line Number' ordinal='9' />
            <column datatype='real' name='List Price' ordinal='10' />
            <column datatype='integer' name='Order Number' ordinal='11' />
            <column datatype='date' name='Promised Delivery Date' ordinal='12' />
            <column datatype='real' name='Sales Amount' ordinal='13' />
            <column datatype='real' name='Sales Amount Based on List Price' ordinal='14' />
            <column datatype='real' name='Sales Cost Amount' ordinal='15' />
            <column datatype='real' name='Sales Margin Amount' ordinal='16' />
            <column datatype='real' name='Sales Price' ordinal='17' />
            <column datatype='integer' name='Sales Quantity' ordinal='18' />
            <column datatype='integer' name='Sales Rep' ordinal='19' />
            <column datatype='string' name='U/M' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ajlspr0k8lpuh106ntjl0t359fd' name='Amazon Cleaned Sales Data' table='[&apos;Amazon Cleaned Sales Data$&apos;]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='CustKey' ordinal='1' />
            <column datatype='date' name='DateKey' ordinal='2' />
            <column datatype='real' name='Discount Amount' ordinal='3' />
            <column datatype='date' name='Invoice Date' ordinal='4' />
            <column datatype='integer' name='Invoice Number' ordinal='5' />
            <column datatype='string' name='Item Class' ordinal='6' />
            <column datatype='integer' name='Item Number' ordinal='7' />
            <column datatype='string' name='Item' ordinal='8' />
            <column datatype='integer' name='Line Number' ordinal='9' />
            <column datatype='real' name='List Price' ordinal='10' />
            <column datatype='integer' name='Order Number' ordinal='11' />
            <column datatype='date' name='Promised Delivery Date' ordinal='12' />
            <column datatype='real' name='Sales Amount' ordinal='13' />
            <column datatype='real' name='Sales Amount Based on List Price' ordinal='14' />
            <column datatype='real' name='Sales Cost Amount' ordinal='15' />
            <column datatype='real' name='Sales Margin Amount' ordinal='16' />
            <column datatype='real' name='Sales Price' ordinal='17' />
            <column datatype='integer' name='Sales Quantity' ordinal='18' />
            <column datatype='integer' name='Sales Rep' ordinal='19' />
            <column datatype='string' name='U/M' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10001:no:A1:U10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustKey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustKey]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>CustKey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateKey</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DateKey]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>DateKey</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount Amount]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Discount Amount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Invoice Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Invoice Date]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Invoice Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Invoice Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Invoice Number]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Invoice Number</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item Class]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Item Class</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Item Number]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Item Number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Item</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Item]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Item</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Line Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Line Number]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Line Number</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>List Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[List Price]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>List Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order Number]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Order Number</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Promised Delivery Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Promised Delivery Date]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Promised Delivery Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales Amount]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Sales Amount</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Amount Based on List Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales Amount Based on List Price]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Sales Amount Based on List Price</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Cost Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales Cost Amount]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Sales Cost Amount</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Margin Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales Margin Amount]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Sales Margin Amount</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales Price]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Sales Price</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales Quantity]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Sales Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Rep</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales Rep]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>Sales Rep</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>U/M</remote-name>
            <remote-type>130</remote-type>
            <local-name>[U/M]</local-name>
            <parent-name>[Amazon Cleaned Sales Data]</parent-name>
            <remote-alias>U/M</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Amount:qk]&quot;' value='Total Orders' />
          <alias key='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]&quot;' value=' Total Discount Amount' />
          <alias key='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]&quot;' value='Total Sales Amount' />
          <alias key='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]&quot;' value='Total Sales Cost Amount' />
          <alias key='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]&quot;' value=' Total Sales Quantity' />
        </aliases>
      </column>
      <column caption='Cust Key' datatype='integer' name='[CustKey]' role='dimension' type='ordinal' />
      <column caption='Date Key' datatype='date' name='[DateKey]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Discount Amount]' role='measure' type='quantitative' />
      <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Invoice Number]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Item Number]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Item]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Line Number]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[List Price]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Order Number]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Sales Amount]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' name='[Sales Cost Amount]' role='measure' type='quantitative' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' name='[Sales Margin Amount]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1116%' name='[Sales Price]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0,K;-#,##0,K' name='[Sales Quantity]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Sales Rep]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Amazon Cleaned Sales Data' datatype='table' name='[__tableau_internal_object_id__].[Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC]' role='measure' type='quantitative' />
      <column-instance column='[Sales Amount]' derivation='Count' name='[cnt:Sales Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount Amount]' derivation='Sum' name='[sum:Discount Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales Amount]' derivation='Sum' name='[sum:Sales Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales Cost Amount]' derivation='Sum' name='[sum:Sales Cost Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales Quantity]' derivation='Sum' name='[sum:Sales Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Invoice Date]' derivation='Year' name='[yr:Invoice Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (MONTH(Invoice Date))' hidden='true' name='[Action (MONTH(Invoice Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Invoice Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Invoice Date))' hidden='true' name='[Action (YEAR(Invoice Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Invoice Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Sales Rep Set' name='[Sales Rep Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Sales Rep Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales Amount])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Sales Rep]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.888889' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.111111' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Amount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Invoice Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2019</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Applause Canned Mixed Fruit&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BBB Best Grape Jam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Best Choice Chocolate Donuts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Best Corn Puffs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Better Vegetable Soup&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Big Time Pancake Mix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bravo Beef Soup&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlson Havarti Cheese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Choice White Chocolate Bar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colony English Muffins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ebony Almonds&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ebony Macintosh Apples&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ebony Walnuts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Excellent Apple Drink&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fantastic Rye Bread&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fast Low Fat Cookies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Golden Frozen Corn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gorilla 1\% Milk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Great Pumpernickel Bread&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;High Top Limes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Imagine Chicken TV Dinner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeffers Corn Puffs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Just Right Fancy Canned Sardines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Landslide Pepper&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moms Turkey Hot Dogs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nationeel Frosted Donuts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearl Chardonnay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Red Spade Sliced Chicken&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Super Hot Chocolate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tell Tale Fresh Lima Beans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tell Tale Prepared Salad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Token Cream Soda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Orange Juice&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American Beef Bologna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BBB Best Apple Preserves&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BBB Best White Sugar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Best Choice Low Fat Popcorn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Better Chicken Noodle Soup&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Big Time Grape Popsicles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blue Label Regular Ramen Soup&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bravo Noodle Soup&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carlson String Cheese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Club Muenster Cheese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cutting Edge Potato Salad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ebony Fresh Lima Beans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ebony Red Delcious Apples&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Even Better Low Fat Sour Cream&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fabulous Cream Soda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fast Frosted Cookies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Golden Blueberry Waffles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Golden Popsicles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gorilla Sour Cream&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;High Top Dried Mushrooms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;High Top Squash&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imagine Ice Cream Sandwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Just Right Canned Tuna in Water&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Landslide Creamy Peanut Butter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moms Foot-Long Hot Dogs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nationeel Cheese Dip&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nationeel No Salt Popcorn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Red Spade Beef Bologna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Super Apple Jam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tell Tale Broccoli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tell Tale Mushrooms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thresher Semi-Sweet Chocolate Bar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Apple Juice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Potato Salad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BBB Best Corn Oil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Best Choice Beef Jerky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Best Choice Salsa Dip&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Better Fancy Canned Sardines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Big Time Lemon Popsicles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blue Medal Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carlson Blueberry Yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Choice Mints&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Club String Cheese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cutting Edge Sliced Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ebony Honey Dew&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ebony Sweet Onion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Even Better Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fabulous Orange Juice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fast Golden Raisins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Golden Frozen Cauliflower&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Good Imported Beer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Great Bagels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;High Top Garlic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;High Top Tomatos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Imagine Orange Popsicles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Just Right Chicken Soup&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Landslide Grape Jelly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moms Roasted Chicken&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nationeel Dried Apricots&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nationeel Salsa Dip&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Red Spade Low Fat Bologna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Super Creamy Peanut Butter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tell Tale Dried Mushrooms&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tell Tale Party Nuts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tip Top Lox&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Cream Soda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atomic Mints&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BBB Best Low Fat Apple Butter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Best Choice Frosted Donuts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Better Beef Soup&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Big Time Frozen Broccoli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blue Label Canned String Beans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bravo Canned Tuna in Oil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlson Low Fat Cottage Cheese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Club Cheese Spread&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cutting Edge Beef Bologna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ebony Canned Peanuts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ebony New Potatos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Even Better Buttermilk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Excellent Cranberry Juice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast BBQ Potato Chips&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fast Potato Chips&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Golden Frozen Pepperoni Pizza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gorilla Cheese Spread&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Green Ribbon Canned Peaches&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High Top Mushrooms&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imagine Frozen Cauliflower&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jumbo Small Brown Eggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Just Right Vegetable Soup&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Landslide Strawberry Preserves&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monarch Spaghetti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nationeel Graham Crackers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pearl Merlot Wine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shady Lake Rice Medly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Super Sesame Oil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tell Tale Green Pepper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tell Tale Summer Squash&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urban Large Eggs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Applause Canned Peaches&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BBB Best Grape Jelly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Best Choice Corn Chips&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Best Grits&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Big Time Apple Cinnamon Waffles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Big Time Popsicles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bravo Canned Beets&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlson Head Cheese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Club 1\% Milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colony Muffins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ebony Asparagus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ebony Mandarin Oranges&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Even Better 1\% Milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Excellent Apple Juice&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fantastic Wheat Bread&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fast Low Fat Popcorn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Golden Frozen Mushroom Pizza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gorilla 2\% Milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Great Rye Bread&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;High Top Macintosh Apples&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Imagine Fajita French Fries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeffers Grits&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Just Right Large Canned Shrimp&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Landslide Salt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monarch Manicotti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nationeel Fudge Brownies&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pearl Chardonnay Wine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Red Spade Sliced Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Super Low Fat Apple Butter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tell Tale Fuji Apples&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tell Tale Red Delcious Apples&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Token Diet Soda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Strawberry Drink&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American Roasted Chicken&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BBB Best Creamy Peanut Butter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Best Choice Buttered Popcorn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Best Choice Salted Pretzels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Better Large Canned Shrimp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Big Time Lime Popsicles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blue Medal Large Eggs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlson Buttermilk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Choice Semi-Sweet Chocolate Bar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colony Bagels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cutting Edge Turkey Hot Dogs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebony Lemons&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebony Sweet Peas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Even Better Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fabulous Strawberry Drink&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fast Graham Crackers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Golden Frozen Cheese Pizza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Good Light Wine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Great Blueberry Muffins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High Top Golden Delcious Apples&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High Top Walnuts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Imagine Pancake Mix&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Just Right Fancy Canned Anchovies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Landslide Hot Chocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moms Sliced Chicken&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nationeel Dried Dates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nationeel Salted Pretzels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red Spade Low Fat Cole Slaw&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Super Extra Chunky Peanut Butter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tell Tale Elephant Garlic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tell Tale Peaches&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Token Apple Drink&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Diet Cola&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BBB Best Apple Jam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BBB Best Tomato Sauce&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Best Choice Low Fat Chips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Better Canned Tuna in Water&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Big Time Frozen Peas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Blue Label Large Canned Shrimp&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bravo Fancy Canned Sardines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlson Sour Cream&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Club Low Fat String Cheese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cutting Edge Low Fat Cole Slaw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ebony Fancy Plums&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ebony Potatos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Even Better Large Curd Cottage Cheese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fabulous Cola&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Corn Chips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Golden Apple Cinnamon Waffles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Golden Orange Popsicles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gorilla Low Fat String Cheese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High Top Cauliflower&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High Top Red Delcious Apples&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imagine Grape Popsicles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Just Right Canned Tomatos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Landslide Chunky Peanut Butter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moms Cole Slaw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nationeel Beef Jerky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nationeel Low Fat Popcorn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Radius Oatmeal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Special Wheat Puffs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tell Tale Almonds&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tell Tale Mandarin Oranges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thresher Mint Chocolate Bar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walrus White Zinfandel Wine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American Chicken Hot Dogs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BBB Best Brown Sugar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Best Choice Apple Fruit Roll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Best Choice No Salt Popcorn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Better Fancy Canned Anchovies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Big Time Home Style French Fries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blue Label Rice Soup&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bravo Vegetable Soup&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Choice Bubble Gum&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Club Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cutting Edge Roasted Chicken&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ebony Fuji Apples&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ebony Red Pepper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Even Better Low Fat String Cheese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fabulous Diet Cola&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fast Frosted Donuts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Chicken TV Dinner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Golden Waffles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gorilla Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;High Top Firm Tofu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;High Top Summer Squash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Imagine Lemon Popsicles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Just Right Canned Yams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Landslide Extra Chunky Peanut Butter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moms Low Fat Bologna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nationeel Chocolate Chip Cookies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nationeel Potato Chips&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Red Spade Cole Slaw&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Super Apple Jelly&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tell Tale Canned Peanuts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tell Tale New Potatos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thresher Spicy Mints&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Berry Juice&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atomic White Chocolate Bar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BBB Best Strawberry Jelly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Best Choice Graham Crackers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Better Canned Tomatos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Big Time Frozen Mushroom Pizza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blue Label Fancy Canned Clams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bravo Creamed Corn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carlson Muenster Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Club Jack Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cutting Edge Foot-Long Hot Dogs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ebony Dried Mushrooms&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ebony Peaches&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Even Better Head Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fabulous Apple Juice&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fast Cheese Dip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Footnote Extra Lean Hamburger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Golden Lime Popsicles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gorilla Jack Cheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High Top Broccoli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High Top Party Nuts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Imagine Frozen Peas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Just Right Canned Peas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Landslide Brown Sugar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moms Beef Bologna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nationeel Avocado Dip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nationeel Low Fat Chips&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Radius Corn Puffs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Special Grits&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swell Canned Mixed Fruit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tell Tale Limes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tell Tale Tomatos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Walrus Imported Beer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American Sliced Ham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BBB Best Decaf Coffee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Best Choice Cheese Crackers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Best Choice Sesame Crackers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Better Noodle Soup&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Big Time Low Fat French Fries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blue Medal Small Brown Eggs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlson Cheese Spread&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Choice Spicy Mints&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colony Blueberry Muffins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Discover Manicotti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ebony Lettuce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ebony Tangerines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Even Better String Cheese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fantastic Blueberry Muffins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fast Lemon Cookies&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Golden Frozen Chicken Thighs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Good Merlot Wine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great English Muffins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;High Top Green Pepper&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Imagine Apple Cinnamon Waffles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Imagine Popsicles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Just Right Fancy Canned Clams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Landslide Low Fat Apple Butter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moms Sliced Ham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nationeel Fondue Mix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nationeel Sesame Crackers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Red Spade Pimento Loaf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Super French Roast Coffee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tell Tale Fancy Plums&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tell Tale Plums&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Token Apple Juice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Diet Soda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atomic Semi-Sweet Chocolate Bar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BBB Best Pepper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Best Choice Fudge Brownies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Better Canned Beets&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Big Time Frozen Cauliflower&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blue Label Canned Tomatos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bravo Canned Tuna in Water&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carlson Low Fat Sour Cream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Club Chocolate Milk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cutting Edge Chicken Hot Dogs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ebony Cantelope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ebony Onions&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Even Better Cheese Spread&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Excellent Cream Soda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fast Beef Jerky&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fast Salsa Dip&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golden Frozen Sausage Pizza&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gorilla Chocolate Milk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High Top Asparagus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High Top New Potatos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Imagine Frozen Cheese Pizza&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jumbo Small Eggs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiwi Lox&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Landslide Vegetable Oil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monarch Thai Rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nationeel Grape Fruit Roll&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pearl White Zinfandel Wine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shady Lake Thai Rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Super Strawberry Preserves&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tell Tale Honey Dew&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tell Tale Sweet Onion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Urban Small Brown Eggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atomic Spicy Mints&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BBB Best Salt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Best Choice Fudge Cookies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Better Canned Peas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Big Time Frozen Cheese Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Label Creamed Corn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bravo Canned Yams&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carlson Low Fat String Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Club Havarti Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cutting Edge Cole Slaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ebony Cauliflower&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ebony Oranges&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Even Better Chocolate Milk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Excellent Mango Drink&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Buttered Popcorn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fast Strawberry Fruit Roll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Golden Grape Popsicles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gorilla Havarti Cheese&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;High Top Baby Onion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;High Top Onions&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Imagine Frozen Mushroom Pizza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Just Right Beef Soup&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiwi Scallops&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Landslide White Sugar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;National Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nationeel Lemon Cookies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Quick Extra Lean Hamburger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ship Shape Extra Lean Hamburger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Super Vegetable Oil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tell Tale Lemons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tell Tale Sweet Peas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urban Small Eggs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BBB Best Apple Butter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BBB Best Strawberry Preserves&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Best Choice Low Fat BBQ Chips&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Better Canned Tuna in Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Big Time Frozen Pancakes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Blue Label Fancy Canned Oysters&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bravo Fancy Canned Oysters&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carlson Sharp Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Club Low Fat Cottage Cheese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cutting Edge Low Fat Bologna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ebony Elephant Garlic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ebony Plums&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Even Better Jack Cheese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fabulous Berry Juice&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Chocolate Donuts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Footnote Seasoned Hamburger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Golden Low Fat Waffles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gorilla Low Fat Cottage Cheese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High Top Canned Peanuts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High Top Prepared Salad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Imagine Frozen Pepperoni Pizza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Just Right Canned String Beans&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Landslide Canola Oil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moms Chicken Hot Dogs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nationeel BBQ Potato Chips&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nationeel Low Fat Cookies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Radius Grits&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Special Oatmeal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swell Canned Peaches&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tell Tale Macintosh Apples&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tell Tale Walnuts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walrus Light Beer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BBB Best Apple Jelly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BBB Best Vegetable Oil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Best Choice Low Fat Cookies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Better Canned Yams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Big Time Frozen Sausage Pizza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blue Label Noodle Soup&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bravo Large Canned Shrimp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carlson Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Club Mild Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cutting Edge Pimento Loaf&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ebony Firm Tofu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ebony Prepared Salad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Even Better Low Fat Cottage Cheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fabulous Cranberry Juice&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fast Dried Apples&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Golden Beef TV Dinner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Golden Pancake Mix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gorilla Mild Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High Top Corn on the Cob&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High Top Shitake Mushrooms&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Imagine Home Style French Fries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Just Right Canned Tuna in Oil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Landslide Columbian Coffee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moms Corned Beef&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nationeel Buttered Popcorn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nationeel Mini Donuts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Radius Wheat Puffs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Super Apple Butter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tell Tale Beets&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tell Tale Mixed Nuts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thresher Mints&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Apple Drink&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atomic Bubble Gum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BBB Best Grape Preserves&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Best Choice Dried Apricots&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Best Oatmeal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Big Time Beef TV Dinner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Big Time Waffles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bravo Canned String Beans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlson Jack Cheese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Club Blueberry Yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colony Wheat Bread&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ebony Baby Onion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ebony Mixed Nuts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Even Better 2\% Milk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Excellent Berry Juice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fantastic White Bread&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fast Mini Donuts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Golden Frozen Pancakes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gorilla Blueberry Yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Great Wheat Bread&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High Top Mandarin Oranges&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Imagine Frozen Broccoli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeffers Wheat Puffs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Just Right Regular Ramen Soup&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Landslide Sesame Oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monarch Ravioli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nationeel Fudge Cookies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pearl Light Beer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Spade Turkey Hot Dogs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Super Regular Coffee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tell Tale Garlic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tell Tale Red Pepper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Token Orange Juice&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;American Turkey Hot Dogs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BBB Best Extra Chunky Peanut Butter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Best Choice Chocolate Chip Cookies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Best Choice Sugar Cookies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Better Rice Soup&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Big Time Orange Popsicles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blue Medal Small Eggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlson Chocolate Milk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Choice Tasty Candy Bar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colony Cranberry Muffins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Discover Spaghetti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ebony Limes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ebony Tomatos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Even Better Whole Milk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fantastic Pumpernickel Bread&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Low Fat BBQ Chips&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Golden Frozen Chicken Wings&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Good White Zinfandel Wine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Great Muffins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;High Top Lettuce&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Imagine Beef TV Dinner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Imagine Turkey TV Dinner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Just Right Fancy Canned Oysters&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Landslide Oregano&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moms Sliced Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nationeel Frosted Cookies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nationeel Sugar Cookies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Red Spade Roasted Chicken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Super Grape Preserves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tell Tale Firm Tofu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tell Tale Potatos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Token Cola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Mango Drink&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Corned Beef&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BBB Best Chunky Peanut Butter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Best Choice Avocado Dip&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Best Choice Potato Chips&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Better Fancy Canned Clams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Big Time Ice Cream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blue Label Turkey Noodle Soup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carlson 1\% Milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Choice Malted Milk Balls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Club Sour Cream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cutting Edge Sliced Chicken&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ebony Golden Delcious Apples&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ebony Shitake Mushrooms&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Even Better Mild Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fabulous Diet Soda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fast Fudge Brownies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Golden Fajita French Fries&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Good Chablis Wine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gorilla String Cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High Top Fresh Lima Beans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High Top Sweet Onion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Imagine Low Fat French Fries&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Just Right Chicken Noodle Soup&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Landslide French Roast Coffee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moms Low Fat Cole Slaw&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nationeel Chocolate Donuts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nationeel Raisins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Spade Corned Beef&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Super Canola Oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tell Tale Cantelope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tell Tale Onions&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thresher Tasty Candy Bar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Cola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atomic Tasty Candy Bar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BBB Best Strawberry Jam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Best Choice Golden Raisins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Better Canned String Beans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Big Time Frozen Chicken Thighs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blue Label Fancy Canned Anchovies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bravo Chicken Soup&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carlson Mild Cheddar Cheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Club Head Cheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cutting Edge Corned Beef&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ebony Corn on the Cob&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ebony Party Nuts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Even Better Havarti Cheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Excellent Strawberry Drink&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Cheese Crackers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fast Sugar Cookies&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Golden Home Style French Fries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gorilla Head Cheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;High Top Beets&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;High Top Oranges&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Imagine Frozen Pancakes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Just Right Canned Beets&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Landslide Apple Preserves&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Medalist Thai Rice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nationeel Apple Fruit Roll&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nationeel Low Fat BBQ Chips&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quick Seasoned Hamburger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Special Corn Puffs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Super White Sugar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tell Tale Lettuce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tell Tale Tangerines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Walrus Chardonnay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atomic Mint Chocolate Bar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BBB Best Hot Chocolate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Best Choice Fondue Mix&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Best Wheat Puffs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Big Time Chicken TV Dinner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blue Label Canned Beets&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bravo Canned Tomatos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlson Large Curd Cottage Cheese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Club Buttermilk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colony White Bread&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ebony Broccoli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ebony Mushrooms&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Even Better Blueberry Yogurt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Excellent Cola&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast Avocado Dip&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fast No Salt Popcorn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Golden Frozen Peas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gorilla Buttermilk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Great White Bread&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High Top Mixed Nuts&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Imagine Frozen Carrots&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jumbo Large Eggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Just Right Rice Soup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Landslide Strawberry Jam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monarch Rice Medly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nationeel Golden Raisins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pearl Light Wine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shady Lake Manicotti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Super Salt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tell Tale Golden Delcious Apples&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tell Tale Shitake Mushrooms&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Urban Large Brown Eggs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Pimento Loaf&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BBB Best Columbian Coffee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Best Choice BBQ Potato Chips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Best Choice Raisins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Better Fancy Canned Oysters&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Big Time Ice Cream Sandwich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blue Label Vegetable Soup&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carlson 2\% Milk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Choice Mint Chocolate Bar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Club Strawberry Yogurt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cutting Edge Sliced Ham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ebony Green Pepper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ebony Squash&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Even Better Muenster Cheese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fabulous Mango Drink&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fast Fudge Cookies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Golden Frozen Broccoli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Good Chardonnay Wine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gorilla Whole Milk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;High Top Fuji Apples&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;High Top Sweet Peas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Imagine Low Fat Waffles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Just Right Chicken Ramen Soup&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Landslide Grape Jam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moms Potato Salad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nationeel Corn Chips&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nationeel Raspberry Fruit Roll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Red Spade Foot-Long Hot Dogs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Super Columbian Coffee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tell Tale Corn on the Cob&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tell Tale Oranges&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thresher White Chocolate Bar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Cranberry Juice&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='CustKey' />
        <field-sort-custom-order field='DateKey' />
        <field-sort-custom-order field='Discount Amount' />
        <field-sort-custom-order field='Invoice Date' />
        <field-sort-custom-order field='Invoice Number' />
        <field-sort-custom-order field='Item Class' />
        <field-sort-custom-order field='Item Number' />
        <field-sort-custom-order field='Item' />
        <field-sort-custom-order field='Line Number' />
        <field-sort-custom-order field='List Price' />
        <field-sort-custom-order field='Order Number' />
        <field-sort-custom-order field='Promised Delivery Date' />
        <field-sort-custom-order field='Sales Amount' />
        <field-sort-custom-order field='Calculation_439382484584685569' />
        <field-sort-custom-order field='Sales Amount Based on List Price' />
        <field-sort-custom-order field='Sales Cost Amount' />
        <field-sort-custom-order field='Sales Margin Amount' />
        <field-sort-custom-order field='Sales Price' />
        <field-sort-custom-order field='Sales Quantity' />
        <field-sort-custom-order field='Sales Rep' />
        <field-sort-custom-order field='U/M' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sales Rep Parameter' datatype='integer' name='[Sales Rep Parameter]' param-domain-type='any' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Amazon Cleaned Sales Data' id='Amazon Cleaned Sales Data_7E78DA1A5F1D4D88BEDE0CF72D8561AC'>
            <properties context=''>
              <relation connection='excel-direct.1ajlspr0k8lpuh106ntjl0t359fd' name='Amazon Cleaned Sales Data' table='[&apos;Amazon Cleaned Sales Data$&apos;]' type='table'>
                <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='CustKey' ordinal='1' />
                  <column datatype='date' name='DateKey' ordinal='2' />
                  <column datatype='real' name='Discount Amount' ordinal='3' />
                  <column datatype='date' name='Invoice Date' ordinal='4' />
                  <column datatype='integer' name='Invoice Number' ordinal='5' />
                  <column datatype='string' name='Item Class' ordinal='6' />
                  <column datatype='integer' name='Item Number' ordinal='7' />
                  <column datatype='string' name='Item' ordinal='8' />
                  <column datatype='integer' name='Line Number' ordinal='9' />
                  <column datatype='real' name='List Price' ordinal='10' />
                  <column datatype='integer' name='Order Number' ordinal='11' />
                  <column datatype='date' name='Promised Delivery Date' ordinal='12' />
                  <column datatype='real' name='Sales Amount' ordinal='13' />
                  <column datatype='real' name='Sales Amount Based on List Price' ordinal='14' />
                  <column datatype='real' name='Sales Cost Amount' ordinal='15' />
                  <column datatype='real' name='Sales Margin Amount' ordinal='16' />
                  <column datatype='real' name='Sales Price' ordinal='17' />
                  <column datatype='integer' name='Sales Quantity' ordinal='18' />
                  <column datatype='integer' name='Sales Rep' ordinal='19' />
                  <column datatype='string' name='U/M' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_C810D9B1B5974816854929C8F997D66D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Selector' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_739258365A944F2584620DFA6620D538]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales/Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Banner'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales Report for</run>
            <run fontsize='14'><![CDATA[ <[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Discount Amount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Sales Amount]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' name='[Sales Cost Amount]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0,K;-#,##0,K' name='[Sales Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Sales Amount]' derivation='Count' name='[cnt:Sales Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Discount Amount]' derivation='Sum' name='[sum:Discount Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Amount]' derivation='Sum' name='[sum:Sales Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Cost Amount]' derivation='Sum' name='[sum:Sales Cost Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Quantity]' derivation='Sum' name='[sum:Sales Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Year' name='[yr:Invoice Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Amount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Amount:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (MONTH(Invoice Date))]'>
            <groupfilter function='level-members' level='[mn:Invoice Date:ok]' user:ui-action-filter='[Action2_739258365A944F2584620DFA6620D538]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (YEAR(Invoice Date))]'>
            <groupfilter function='level-members' level='[yr:Invoice Date:ok]' user:ui-action-filter='[Action1_C810D9B1B5974816854929C8F997D66D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]</column>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (YEAR(Invoice Date))]</column>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (MONTH(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' value='194' />
            <format attr='text-format' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Amount:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='text-format' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' value='c&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
            <format attr='text-format' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]' value='c&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
            <format attr='text-format' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]' value='c&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e4faff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Multiple Values]' />
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='20'><![CDATA[<[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run bold='false'><![CDATA[<[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C6AFB4ED-4774-4111-9EB2-C117E2BDEA66}' />
    </worksheet>
    <worksheet name='D/S'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Sales and Discount Relation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Discount Amount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Sales Amount]' role='dimension' type='ordinal' />
            <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount Amount]' derivation='Sum' name='[sum:Discount Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Amount]' derivation='Sum' name='[sum:Sales Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:qk]' value='iLLLL' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' />
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' />
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Discount Amount:qk] + [federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk])</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:qk]</cols>
      </table>
      <simple-id uuid='{1AE0BB14-3E67-451E-A434-8C841676823B}' />
    </worksheet>
    <worksheet name='Relation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relation between Total Sales and Total Sales Amount
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Sales Amount]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,.00K;-&quot;$&quot;#,##0,.00K' name='[Sales Cost Amount]' role='measure' type='quantitative' />
            <column-instance column='[Sales Amount]' derivation='None' name='[none:Sales Amount:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales Amount]' derivation='Sum' name='[sum:Sales Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Cost Amount]' derivation='Sum' name='[sum:Sales Cost Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Year' name='[yr:Invoice Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]'>
            <groupfilter function='level-members' level='[yr:Invoice Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]' value='80' />
            <format attr='height' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' value='51' />
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]' field-type='quantitative' max='863579.3230345808' min='-35240.841424643368' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' field-type='quantitative' max='1373255.7101682804' min='-36194.415028294534' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]' scope='cols' value='Sales Cost' />
            <format attr='title' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' scope='rows' value=' Sales ' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Amount:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#64a71c' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='1.2413811683654785' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1006' />
                <format attr='maxwidth' value='1006' />
                <format attr='minheight' value='700' />
                <format attr='maxheight' value='700' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Cost Amount:qk]</cols>
      </table>
      <simple-id uuid='{D0AC7FB5-8DBA-449D-8C96-CF256C9A3180}' />
    </worksheet>
    <worksheet name='Relation2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relation between List Price and Sales Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[List Price]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0,K;-#,##0,K' name='[Sales Quantity]' role='measure' type='quantitative' />
            <column-instance column='[List Price]' derivation='Sum' name='[sum:List Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Quantity]' derivation='Sum' name='[sum:Sales Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]' field-type='quantitative' max='6127' min='-488' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:List Price:qk]' field-type='quantitative' max='1077.5496391388588' min='-63.80541442860391' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#64a71c' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:List Price:qk]</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]</cols>
      </table>
      <simple-id uuid='{B06B5E32-7252-415B-978D-4D8DCB633732}' />
    </worksheet>
    <worksheet name='Relation3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relation between Sales and List Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[List Price]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1116%' name='[Sales Price]' role='measure' type='quantitative' />
            <column-instance column='[List Price]' derivation='Sum' name='[sum:List Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Price]' derivation='Sum' name='[sum:Sales Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Year' name='[yr:Invoice Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]'>
            <groupfilter function='level-members' level='[yr:Invoice Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:List Price:qk]' field-type='quantitative' max='2120.8801229971759' min='-114.12713959671157' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Price:qk]' field-type='quantitative' max='4609.996319016187' min='-275.54140192125311' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
                <format attr='mark-color' value='#64a71c' />
                <format attr='size' value='1.263370156288147' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Price:qk]</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:List Price:qk]</cols>
      </table>
      <simple-id uuid='{418AFA87-336A-4901-845C-4E8D7D9CA0D3}' />
    </worksheet>
    <worksheet name='Sales per Sales rep'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales Amount by Sales Rep</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sales Rep Parameter' datatype='integer' name='[Sales Rep Parameter]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column aggregation='Sum' datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Sales Amount]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Sales Rep]' role='dimension' type='ordinal' />
            <column-instance column='[Sales Rep]' derivation='None' name='[none:Sales Rep:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales Amount]' derivation='Sum' name='[sum:Sales Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Rep]' derivation='Sum' name='[sum:Sales Rep:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Rep:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Sales Rep Set]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Rep:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]</column>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Sales Rep Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Rep:ok]</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]</cols>
      </table>
      <simple-id uuid='{97EBE66F-160D-4780-B03F-BEBA918B0880}' />
    </worksheet>
    <worksheet name='Sales/Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales of  &lt;</run>
            <run>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]</run>
            <run>&gt;  Month </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='n#,##0,K;-#,##0,K' name='[Sales Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Quantity]' derivation='Sum' name='[sum:Sales Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Year' name='[yr:Invoice Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (YEAR(Invoice Date))]'>
            <groupfilter function='level-members' level='[yr:Invoice Date:ok]' user:ui-action-filter='[Action1_C810D9B1B5974816854929C8F997D66D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]'>
            <groupfilter function='level-members' level='[mn:Invoice Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]</column>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (YEAR(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:qk]' value='iLLLL' />
            <format attr='text-orientation' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]' value='Select Month'>
              <formatted-text>
                <run fontalignment='1' fontsize='10'>Select Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]</cols>
      </table>
      <simple-id uuid='{465548BF-C1D1-410D-B110-0241B45CC12E}' />
    </worksheet>
    <worksheet name='Sales/Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='n#,##0,K;-#,##0,K' name='[Sales Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales Quantity]' derivation='Sum' name='[sum:Sales Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Invoice Date]' derivation='Year' name='[yr:Invoice Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (MONTH(Invoice Date))]'>
            <groupfilter function='level-members' level='[mn:Invoice Date:ok]' user:ui-action-filter='[Action2_739258365A944F2584620DFA6620D538]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (YEAR(Invoice Date))]'>
            <groupfilter function='level-members' level='[yr:Invoice Date:ok]' user:ui-action-filter='[Action1_C810D9B1B5974816854929C8F997D66D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (YEAR(Invoice Date))]</column>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (MONTH(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]' field-type='quantitative' max='1572759' min='-17685' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='total' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]' />
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]</cols>
      </table>
      <simple-id uuid='{3B668B72-3621-4CFC-A5DE-BA9B242EDD4F}' />
    </worksheet>
    <worksheet name='Selector'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Select Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
          </datasources>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
            <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Invoice Date]' derivation='Year' name='[yr:Invoice Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (MONTH(Invoice Date))]'>
            <groupfilter function='level-members' level='[mn:Invoice Date:ok]' user:ui-action-filter='[Action2_739258365A944F2584620DFA6620D538]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Action (MONTH(Invoice Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='67' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{14A51C49-2A56-4E96-B3EE-7E8432A8A11E}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N margin Items' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5.'>
              <calculation class='tableau' formula='5.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Sales Amount]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' name='[Sales Margin Amount]' role='measure' type='quantitative' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales Margin Amount]' derivation='Sum' name='[pcto:sum:Sales Margin Amount:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales Margin Amount]' derivation='Sum' name='[sum:Sales Margin Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales Amount])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='total' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[pcto:sum:Sales Margin Amount:qk]' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]' />
              <size column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Margin Amount:qk]' />
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]' />
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Margin Amount:qk]' />
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[pcto:sum:Sales Margin Amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='14'><![CDATA[<[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='11'><![CDATA[<[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Margin Amount:qk]>]]></run>
                <run fontsize='11'>Æ&#10;</run>
                <run fontsize='11'><![CDATA[<[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[pcto:sum:Sales Margin Amount:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]</field>
                  <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Margin Amount:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;High Top Dried Mushrooms&quot;</value>
                <value>4659100.1599999946</value>
              </tuple>
            </tuple-reference>
            <label-position x='-77' y='28' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4E7E3710-50E7-47EF-9C0C-CD9765F5739F}' />
    </worksheet>
    <worksheet name='Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TON N Quantites' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
            <column datatype='string' name='[Item]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' name='[List Price]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' default-format='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' name='[Sales Amount]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='C1116%' name='[Sales Price]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0,K;-#,##0,K' name='[Sales Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Sales Amount]' derivation='Count' name='[cnt:Sales Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Item]' derivation='None' name='[none:Item:nk]' pivot='key' type='nominal' />
            <column-instance column='[List Price]' derivation='Sum' name='[sum:List Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Price]' derivation='Sum' name='[sum:Sales Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Quantity]' derivation='Sum' name='[sum:Sales Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:List Price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Amount:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:List Price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Amount:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales Quantity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Item:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]</column>
            <column>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' value='141' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]' value='256' />
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' value='#a6eced' />
            <format attr='background-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-style' data-class='total' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' value='#b8ede9' />
            <format attr='background-color' data-class='subtotal' value='#8cc78e' />
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]</rows>
        <cols>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6D377B03-69BF-4A50-B068-E19C51836800}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1200' maxwidth='1000' minheight='1200' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Amazon Cleaned Sales Data (Amazon Cleaned Sales Data)' name='federated.1ljq1sv0bwh10015g0puc1ibcj0w' />
      </datasources>
      <datasource-dependencies datasource='federated.1ljq1sv0bwh10015g0puc1ibcj0w'>
        <column datatype='date' name='[Invoice Date]' role='dimension' type='ordinal' />
        <column-instance column='[Invoice Date]' derivation='Month' name='[mn:Invoice Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98666' id='60' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
            <zone h='98666' id='58' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
              <zone h='98666' id='56' type-v2='layout-basic' w='98400' x='800' y='667'>
                <zone h='63999' id='50' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
                  <zone h='63999' id='45' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
                    <zone h='63999' id='40' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
                      <zone h='63999' id='35' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
                        <zone h='63999' id='31' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
                          <zone h='63999' id='28' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
                            <zone h='63999' id='25' param='horz' type-v2='layout-flow' w='98400' x='800' y='667'>
                              <zone h='63999' id='23' type-v2='layout-basic' w='98400' x='800' y='667'>
                                <zone h='55135' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='9531'>
                                  <zone fixed-size='222' h='18500' id='7' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='9531'>
                                    <zone h='18500' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='9531'>
                                      <zone fixed-size='191' h='16584' id='13' is-fixed='true' name='Banner' w='98400' x='800' y='9531'>
                                        <layout-cache fixed-size-w='972' type-h='cell' type-w='fixed' />
                                        <zone-style>
                                          <format attr='border-color' value='#000000' />
                                          <format attr='border-style' value='none' />
                                          <format attr='border-width' value='0' />
                                          <format attr='margin' value='4' />
                                        </zone-style>
                                      </zone>
                                    </zone>
                                  </zone>
                                  <zone h='36635' id='36' param='horz' type-v2='layout-flow' w='98400' x='800' y='28031'>
                                    <zone h='36635' id='37' param='horz' type-v2='layout-flow' w='98400' x='800' y='28031'>
                                      <zone fixed-size='481' h='36635' id='41' is-fixed='true' param='horz' type-v2='layout-flow' w='98400' x='800' y='28031'>
                                        <zone fixed-size='492' h='36635' id='42' is-fixed='true' param='vert' type-v2='layout-flow' w='98400' x='800' y='28031'>
                                          <zone h='36635' id='46' param='vert' type-v2='layout-flow' w='98400' x='800' y='28031'>
                                            <zone h='36635' id='47' param='horz' type-v2='layout-flow' w='98400' x='800' y='28031'>
                                              <zone fixed-size='502' h='36635' id='48' is-fixed='true' name='Sales/Year' w='51000' x='800' y='28031'>
                                                <layout-cache minheight='175' type-h='scalable' type-w='cell' />
                                                <zone-style>
                                                  <format attr='border-color' value='#000000' />
                                                  <format attr='border-style' value='none' />
                                                  <format attr='border-width' value='0' />
                                                  <format attr='margin' value='4' />
                                                </zone-style>
                                              </zone>
                                              <zone h='36635' id='54' param='vert' type-v2='layout-flow' w='47400' x='51800' y='28031'>
                                                <zone fixed-size='355' forceUpdate='true' h='30250' id='55' is-fixed='true' type-v2='text' w='47400' x='51800' y='28031'>
                                                  <formatted-text>
                                                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14' underline='true'>Insights :</run>
                                                    <run bold='true' fontalignment='1' fontsize='14'>Æ </run>
                                                    <run fontalignment='1'>Æ&#10;</run>
                                                    <run lmargin='555' rmargin='555'>Æ&#10;</run>
                                                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>1</run>
                                                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='16' lmargin='555' rmargin='555'>.</run>
                                                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'> Yearly Sales Trend </run>
                                                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>show a drop in 2018 </run>
                                                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>because we have data for only first 3 months of 2018.</run>
                                                    <run lmargin='555' rmargin='555'>Æ&#10;&#10;&#10;</run>
                                                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>2. </run>
                                                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>The </run>
                                                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>first quarter has higher sales </run>
                                                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>compared to other quarters.</run>
                                                    <run lmargin='555' rmargin='555'>Æ&#10;&#10;&#10;</run>
                                                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>3. </run>
                                                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>Festive Months like August, September and November show </run>
                                                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>significant increase</run>
                                                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'> in number of sales.</run>
                                                  </formatted-text>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='4' />
                                                  </zone-style>
                                                </zone>
                                                <zone h='5334' id='61' mode='dropdown' name='Sales/Months' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]' type-v2='filter' values='database' w='47400' x='51800' y='58281'>
                                                  <zone-style>
                                                    <format attr='border-color' value='#000000' />
                                                    <format attr='border-style' value='none' />
                                                    <format attr='border-width' value='0' />
                                                    <format attr='margin' value='4' />
                                                  </zone-style>
                                                </zone>
                                              </zone>
                                            </zone>
                                          </zone>
                                        </zone>
                                      </zone>
                                    </zone>
                                  </zone>
                                </zone>
                                <zone fixed-size='79' forceUpdate='true' h='8864' id='5' is-fixed='true' type-v2='text' w='60000' x='16889' y='667'>
                                  <formatted-text>
                                    <run bold='true' fontalignment='1' fontsize='22' underline='true'>Amazon Sales Data Analysis </run>
                                  </formatted-text>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone h='8864' id='8' param='horz' type-v2='layout-flow' w='16089' x='800' y='667'>
                                  <zone h='8864' id='10' is-scaled='1' param='C:/Users/himan/Downloads/tajXPwgy3tV8chkV6DIM6sMtF3ay0drl.png' type-v2='bitmap' w='16089' x='800' y='667'>
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                                <zone h='8864' id='11' name='Selector' w='22311' x='76889' y='667'>
                                  <layout-cache cell-count-w='1' fixed-size-h='76' non-cell-size-w='21' type-h='fixed' type-w='cell' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='34667' id='52' param='vert' type-v2='layout-flow' w='98400' x='800' y='64666'>
                  <zone h='34667' id='53' name='Sales/Months' w='98400' x='800' y='64666'>
                    <layout-cache cell-count-w='12' minheight='250' non-cell-size-w='79' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='73' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98666' id='72' param='vert' type-v2='layout-flow' w='98400' x='800' y='667'>
                <zone fixed-size='98' h='8864' id='10' is-fixed='true' is-scaled='1' param='C:/Users/himan/Downloads/tajXPwgy3tV8chkV6DIM6sMtF3ay0drl.png' type-v2='bitmap' w='16089' x='800' y='667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='79' forceUpdate='true' h='8864' id='5' type-v2='text' w='60000' x='16889' y='667'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='22' underline='true'>Amazon Sales Data Analysis </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='98' h='8864' id='11' is-fixed='true' name='Selector' w='22311' x='76889' y='667'>
                  <layout-cache cell-count-w='1' fixed-size-h='76' non-cell-size-w='21' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='191' h='16584' id='13' is-fixed='true' name='Banner' w='98400' x='800' y='9531'>
                  <layout-cache fixed-size-w='972' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36635' id='48' is-fixed='true' name='Sales/Year' w='51000' x='800' y='28031'>
                  <layout-cache minheight='175' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='355' forceUpdate='true' h='30250' id='55' type-v2='text' w='47400' x='51800' y='28031'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14' underline='true'>Insights :</run>
                    <run bold='true' fontalignment='1' fontsize='14'>Æ </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run lmargin='555' rmargin='555'>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>1</run>
                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='16' lmargin='555' rmargin='555'>.</run>
                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'> Yearly Sales Trend </run>
                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>show a drop in 2018 </run>
                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>because we have data for only first 3 months of 2018.</run>
                    <run lmargin='555' rmargin='555'>Æ&#10;&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>2. </run>
                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>The </run>
                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>first quarter has higher sales </run>
                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>compared to other quarters.</run>
                    <run lmargin='555' rmargin='555'>Æ&#10;&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>3. </run>
                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>Festive Months like August, September and November show </run>
                    <run bold='true' fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'>significant increase</run>
                    <run fontcolor='#000000' fontname='Segoe UI' fontsize='11' lmargin='555' rmargin='555'> in number of sales.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5334' id='61' mode='dropdown' name='Sales/Months' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]' type-v2='filter' values='database' w='47400' x='51800' y='58281'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34667' id='53' is-fixed='true' name='Sales/Months' w='98400' x='800' y='64666'>
                  <layout-cache cell-count-w='12' minheight='250' non-cell-size-w='79' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A295BA2B-63B9-4CB6-83CD-CFD5254B7439}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sales/Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8855DEE9-98A9-4BC2-9B65-FC8D0455B4A8}' />
    </window>
    <window class='worksheet' name='Sales/Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9E99F5E-D19C-4529-A85C-03942393EB1F}' />
    </window>
    <window class='worksheet' name='D/S'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='1' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69EEE4F9-3A87-42A3-8DAF-C1AD3711A1A7}' />
    </window>
    <window class='worksheet' name='Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Quantity:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5A48E76-8763-4DD9-8623-10F0FF034AEA}' />
    </window>
    <window class='worksheet' name='Sales per Sales rep'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Sales Amount Set]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Sales Rep Set]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[cnt:Sales Rep:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Rep:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{780E312B-6470-4C5F-A440-50EC58A661B8}' />
    </window>
    <window class='worksheet' name='Relation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[mn:Invoice Date:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:CustKey:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Invoice Number:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item Number:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Order Number:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Amount:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Amount:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FFB142F-E8ED-4301-8615-DECDA9DAD8AB}' />
    </window>
    <window class='worksheet' name='Relation2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{610378BB-07BE-47DD-AD7A-89AACFE8E706}' />
    </window>
    <window class='worksheet' name='Relation3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[attr:Sales Price:ok]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Price:qk]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCC4C2EE-95D1-453E-B298-1AFCE5A16174}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[sum:Sales Margin Amount:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Item Set]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[Sales Amount Set]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item Class:nk]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Item:nk]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Amount:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6640A0BD-E2BF-47A3-BEB1-F8BDF7628096}' />
    </window>
    <window class='worksheet' name='Selector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[yr:Invoice Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C4F8A9B-42C9-49B8-A363-8E3C93071D65}' />
    </window>
    <window class='worksheet' name='Banner'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[:Measure Names]</field>
            <field>[federated.1ljq1sv0bwh10015g0puc1ibcj0w].[none:Sales Amount:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63165E8C-7ACC-4AFF-AED2-7A2781D17E60}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Banner'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Sales/Months'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales/Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Selector'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='55' />
      <device-preview visible='true' />
      <simple-id uuid='{AF7D565C-BFE4-461B-AD85-643F02819D95}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Banner' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D/S' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      cbfjh8b/B6TYYp57+/gZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Relation' width='192'>
      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
      yDWA5Lrm/wOrRmmuZCaLCQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Relation2' width='192'>
      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
      H8xwlGK1Q9WaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Relation3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales per Sales rep' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales/Months' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAaoklEQVR4nO3deXRc133Y8e97s2IbAAPMYN9BkARAigu4SpYpidZRFcuibEeuY7c+OW0c
      W07duml7ek5PWse1m3N6mtO0TlvbSWVbTh3HluNEiZwwtiVRFMUVJEwC3LADA2AAzACzb2/e
      vP4BUJQskJwB32AwnPv5Bwtn7twB32/e793fffdKmqZpCEKBknPdAUHIpawEgKqq2WhWEHQn
      zgBCQTOm+0BNUxkbHiYQS9HV7ODs4Bid9XZ8gQDV9nISpkpUJUFHc102+ysIuko7ACTJQEmx
      hWAiwcDlQbSkRkippre7jRtXJxlb8vDkkQOkUikK4bo6mUxy6tQpqqqqSCaThEIh6uvrmZiY
      YNeuXRgMBjweDx0dHbnuqnAXaadAmpogEIpjMRt5+NHH6OrqwmEzM3TdRV1TLQf378Y1PYss
      y0iSlM0+bwpGo5GKigo8Hg89PT0Eg0FGRkZoamri3Llz/OhHP6K6ujrX3RTuQcrGMKiqqhgM
      Br2b3VQURSEcDvP6669TUVHBvn37CAQCvPbaa3R0dBCNRmlpaRFngE1OBMA6pVIp+vv7aWpq
      wuVyEY/HaW9vJxAI0NLSgizLBINBqqqqct1V4S5EAAgFLe2L4AeBklRRUxpJNfXO9wll5evK
      zymSamr131Ooq98nUys/v/P8ZIrLY/M8srOZI7tac/22hPuw6QJA0zTiikpCUYnEFKIJhWg8
      SVxJEokliSUUYokk0XiSSHz13xIr38dWv8YTKrFEklhi5Xm3Duh3kyQwGmSMBhmTwXD7e5OM
      Qb71exmTceXfDLKE0bjys0GWmF4IcHViUQRAnst5APTfmOXFnw4QjSvEVw/6lKYhSWAxGSm2
      mLBajFjNq9+bjVjMBkqtZqxmI2XFZhwVxRSZjRRZTavPMVJkMWExG7GYDJhXD9rbB7kB+T5H
      qvpvzPLS8cukNO2+2xJyJ+cB0N3q5Hc+uh+zUcZqMa0cvOaVg34z6213EgjHcS0EaK4pz3V3
      hHXKuBKsyBZsZljwRal3lDG/uExTgwPVXEnIt0xLU2aV4CKLke0t+TdebjEZeaizhrNXXSIA
      8ljahbBbleBYPIHD6cBgNBCMKPRsa2Ru2s2Z8wM0NNQVTCUY4OEdzbx1Zbpg3u+DKONKsKoo
      XDh/AbPJjFFSGbw6Trm9jN7uLsamZgqmEgyws92JPxRjeiGQ664I65T+XCCDma5t27LZl7xj
      MYs0KN+J6dD3qW9bPaeuTOe6G8I6iQC4T7u31OHxR0QalKdEANyn0iIzOzqcnL3mynVXhHUQ
      AaCDgz1NIg3KUyIAdLBnSy0Ly2FcIg3KOyIAdFBWbKG3XaRB+Sj9OoCmMnrzOlMzbhZmpxmb
      dBHyeRm6dpN4xEconmJhcTGbfd3UDvc08ZZIg/JOhpVgK6FwhGBUQU7GmfH62NpSwcToFOcu
      XMJaWlFQleB32921kgbNeoK57oqQgfTPACkFW1Ud8XAARVFIKAokkwSDUUwWE7U1ToKhcEFV
      gt/NVmyht83JmasiDcon6V8DSAa88zO0tHfS3FBDhaOOLR2tBBUzrW1tdLY1UlG8uWdwZtuh
      nkYxGpRnMkiBZJpa27GXl1JcVoGzqhzZaKG5sQ7ZZMVskCgpKc1mXze9PV11zHmDIg3KI2IU
      SEe2EgvdrQ6RBuUREQA6e2RHs0iD8ogIAJ3dSoPml0K57oqQBhEAOruVBp0eEmlQPhABkAWH
      e5t468pUrrshpCH9ANA0PO4Zlvwhgj4vcwtLpJJxplxzpJQYCVUjHA5nsav5Y+/WOua8Ibz+
      SK67ItxD+jfFk8JoLWNmZgpNTYEEoWUT1RVWJsbHiRlKsVeUU1KSze7mh/ISK9uaqzh/Y5an
      9nfmujvCXWSQAsksuqdpbGlHJkkyrqIajZSVFaHEFdzueaxWa8FOhfhVh3vFFOl8kEEKFCcW
      T+H3+bDZbFjLbTRWVXBj0kdrRzP79+0lEfYV7FSIX9W3rZ7x2WWWAtFcd0W4C7E4bhZ95bsn
      ONjdyJP7xBLpm5UYBcqiw71NvD0o0qDNTARAFu3bWs+wyyvSoE1MBEAWlZda6Wqq5sKN2Vx3
      RbgDEQBZdqinUaRBm5gIgCzb21XHjSkvy8EHOw2KxhVePX2TpJq694M3kXVVghOx0EoFWFSC
      78luK6K1roILN+Zy3ZWs0TSNb77Sz5/8zUV+emY4193JSPq3RK5Wgudmphi6Moia0hgdnaDM
      lGBifJyRCRfBmJrNvuYlSZJ4+AEfDTrxy0kGxxf4959+hB++PsTMYv4sD7OuSrDBXIwUCRA3
      iEpwOvZtq+f6lAdfKJbrruhu1hPkxVcv8cKxfRzsbuTo3nb+z19fQM2TVGhdleC6mioSJiut
      1aISnA5HZQnNznIuXH+wRoPiSpL/+eOzPL6njT1dKxujfPJoL/5wnL87O5Lj3qUn/eXRZSs7
      Htrxzs+O1a89FSv74FqAUqdTz749MGRJ4uEdK2nQ0b72XHdHNy+/cRU1pfEbR28fFxaTkReO
      9fG1751kT1cd9dVlOezhvYlRoA1yYHsD1x6gNOjy6DzHz43ypV8/iNn03mkv21scPL6njW/k
      QSokAmCDrKRBNvofgNEgfzjG1//yHJ95atcdP+F/4+gOvIEox8+NbnDvMiMCYIOspEHNeT8a
      lEppfOOvL7CtuZrHdrfe8XFWs5HPPdvHn782yJx38y4TIwJgA+3f3sC1yUX84fxNg46fH2V8
      1sdnn9mDLN99sGNHu5NHH2rZ1KNCIgA2kLOyhAaHjYt5mgZNun18/+dX+OLHD1BWbEnrOZ86
      uoPF5QjHz2/OVEgEwAaSJWn1hvn8S4NiiSR/9PJZnjncRXer495PWFVsNfHCc338+S82ZyqU
      0fLoIzeuc+nKVcK+RV576yxTY8NcHuhndmqEiTkvo1P5+cm2kQ71NHJ1Ir/SIE3T+H8/u0yJ
      1cRHH92e8fN3tNfw6M5mvvVKP6nU5imSnh5yZbA2KDJFVjM1zhoGLg+iJcKEFJne7jb8S0GG
      rg3T3FgrKsH34KwsodFp49KwO9ddSdvZazO8+csp/sXHDmA0rC9p+NSHduJeCvPz/jGde7c+
      Z4Zc/PFfnstkefQ4rlkPyaTCw48+RldXFw6bmaHrLuqaajm4fzeu6VlRCb6HW2nQqTxZN8jr
      j/CtV/r57DN7qKlc/5IfxVYTnz/Wx/f+4TILy7mdNHn++ix//JNz/OvnD4p7gnPB7Q3xpf91
      nG/+mw9jS/NiMheSaoqvfe8kNZUlfO7ZPl3a/OYr/Swsh/kP//QDyDn4oBwYdvPffvA2Lzy3
      j8O9TeIiOBec9hIaqsq4PDqf667c1d++fROPP8JnnnpItzY//eQOZjwBXusf163NdA2OL/CH
      PzzNbz2zl8O9TYAYBcqJW2nQ2aszue7KHQ27vLx84ir/8uMHKLKYdGu3xGrmtz+yl5eO/3JD
      U6HrUx7+6/dP8c+e3s0Hd7W883sRADlysKeRgWE3kZiS6668TySm8N9/eIbnH+uhs8Gue/u7
      t9RxuLeJP/mbflIbMGByfcrDf/neSX7z6d0c+ZXqtQiAHKm1l+KsLOHK2OZKgzRN409fvUiD
      w8bTB7dk7XU+/eROJuf9jM/5svYasHIm+9pLJ/knT+5cc+qGCIAckWVpU64bdPLyFAPDbj7/
      bN+6hzzTUVpk5vPH+njx1YtZu494fG6Zr3z3Tf7xE7186A6Lk4kAyKFDPY0MjMwTjW+ONGh+
      KcSf/u1FvvDcPuy2oqy/3u4tdSjJFH+XhfuIpxf8fOU7b/KxR7fza4fufCbLuBJ8fWSc2alx
      Bi5fZWFumiuXL+PzzuENxpicFpXgTNTaS6myFW2K0aCEovJHL5/lyK5W9m6t37DX/ecf3sMP
      37iq68aCM54gX/72CX7t0BaefWTrXR+b0UbZjupKTCYTDqcDg9FAMKLQs62RuWk3Z84P0NBQ
      JyrBGbidBuV+N5kfn7hKQlH51JM77v1gHXU1VfHkvg7+91+d1yUVmvUE+U8vvs4/OtDJxz64
      /Z5F2fTPAGqM/ktXMRmNXDh/AbPJjFFSGbw6Trm9jN7uLsamZkQlOEMHuxu5NDyX0zToytgC
      r54Z5kvPH8Ri2vi9np8/0o0/HOfvz93ffcRz3iD/8cXXObq3Pa2DHzK5J9hg5fGjjwHQ3FC7
      /l4K71FfXUZl2UoadKC7ccNfPxCJ8/Ufn+UzT+2i0WHb8NcHsJiNfOHYvpX7iLes7z5i91KI
      3//OCY7sauX5x3vS/hAWF8E5JssSfdvqc7KpXiql8a1X+ulqquKJPW0b/vrvtq2lmif62taV
      Cnn8Eb760pv0ba3nk0d7M5piIQJgE3i4t4lLw25iieSGvu7PLoxx0+Xltz+y9553d22ETz7e
      iy8U43gGqZAvFOMr3z1Bb5uT33x6FwY5s0NaBMAm0FxTTmmRmcHxhQ17zal5P3/2s8t88WPp
      392VbRazkReO7eMHrw2ldfOMLxTjy99+g+0tDn7rmT0ZH/wgAmBTMBpk9m+v37Ap0vFEkv/x
      8hmePtBJb9vmWsupu9XBkV2tK0uqpO6cCgXCcb787TfY0mjns+s8+EEEwKbx8I5mLt7Mfhqk
      aRrf//kVLCYjv/5YT1Zfa70+9aEdLPoid1xSJRCJ8/vfOUFbXSWf+0jfug9+EAGwabTWVlBi
      NWU9DTp/fZY3Bib54sfXf3dXtlnNRr7w3D5+8ItB5pdC7/m3aFzhay+dxFFRzBee24fhPt9D
      +vsEaynGR4YxFpdjlRRCioSzvIjJOS+dLU4Ug41IwIvTkf4N08JtRoPM/u4G3h6cpk/HSmwk
      pjA6s8TI7DLXJz0Mji/wuWf3Umsv1e01sqGn7faSKr/3mUcxyDKxRJKvvvQmtmIzv/uJQ7oE
      cNp3hGmahpqIcWPchdVkwIBGHOioK2N01M1MQKFvz05KLQZSqRRG48YXVPLdyMwS//m7b/Kt
      f/vhdRWkEorK1LyfYZeXa1MeRmeWmfMGcVaWsKWxiq6mKnrbHLTVVWah9/qLxhX+1deP89wH
      tnFkdyt/8GdvYTLK/LtPPvy+5RjXa82/cjywyMkLQ2zv2UlDza354Co3hsfZ3rOdmzduoqKB
      JBEMRjFZTNTWVBIMhbEVVYipEOt0Kw0aGl98Z7XlO1FTKea8Ia5PeRh2LTHiWmJy3kdpkZnO
      BjvbW6p5Yk8bnQ12SorMG/QO9FVkMfHCsX384V+8zRsDE5RYzboe/HCHAJBNFlKJCGfeeoP6
      1k4O7d0JmobZZMA1O09zQw2hhER1uRWXe4nWthqSsgUlJnaIuR9Gg8y+bfW8PTj9ngDQNI2l
      QJRrkx5GZ5cYdi0xNruMBmxptNPVWMUnHu+hvb6S6vLi3L2BLHios4bH97Qxsxjgdz9xWNeD
      H+6QAoU9U8SKm1CD8zhrMp/2IG6KX7+b016++tKb/M5H9zM2u8zIzMrBHojEaa+vpKuxis4G
      O50NduqryzZFASufrRkAF37xY274i2modXDkcOarAYgAWL+kmuL3/u/rhGMJtqwe7Fsa7TQ7
      y3X/9BPWSIE0TcNU5qDI7yESebB3NtyMjAaZP/jsE7nuRsF4XwBIkkRro5PqrkP4Z/Nrxz9B
      yNSaF8FTUy7Gll20t699H6UgPCjWrCRs6WgjHI4yP5/7W/UEIZvWDADJXIyUjL/v97GQn4QK
      QZ+XuYUlsVG2kPfWLjdqKv5gELNv+favNI2pmwPYuh7FMz0HEoSWTVRXWJkYHydmKMVeUU7J
      +tdPFYQNt/YZQJLp7u7GWlz8rt9J1NXWrj4pSTKuohrFRtlCflvzDKDJZgLLiyQNt9eG0bQk
      s94oxGex2WyEFInGKhs3Jr10djTTYCwn4ltELnGKABDyxl1nXMVjt+sAkmRk645d73uM2Chb
      yGdrpEAaszMuFCVJd1cHEy4xEiQ8uN4XAJoGc8sRnjv2LEGfl9bGmlz0SxA2xPsCQJLAYbPy
      6k9/SkVtaw66JAgbZ83JcJqmEovGWPKFaKjP/AwgJsMJ+WLNi+DI7DV+cmqC0vLidQWAIOSL
      NesAxXVdGLU4D3W1v+f3tyrBiVhopQIsKsFCnlszAKILI0SMpUxM3N7T9VYleCmqMXRlEDWl
      MTo6QZkpwcT4OCMTLoIxdcM6Lgh6WGMUSGN8PoLRN04geXtztHdXgg3mYqRIgLhBVIKF/Lbm
      NUCl3UHfwYdJ3aESXFdTxXJYobWqTFSChby29j3B7ut84yen6Wiq49iHn8q4UTEKJOSLNc8A
      RZX1PP3BgywEIhvdH0HYUGveE/zLa6MEPXN4optz6TxB0MuaZwD/wjQmextdogQgPODSXhox
      E+IaQMgXIscRCpoIAKGgZbA8usbVc7+gqucoZclFzg6O0VlvxxcIUG0vJ2GqRFUSdDTffVFX
      QdhMMtgoW6K5qQnQGLg8iJYIE1Jkervb8C8FGbo2THNjragEC3klg/0Bkly7eA61vIUdnQ1M
      u1xYDRruxWWaGhyoFjsBr4e2lgZxESzkDTEKJBQ0cREsFDQRAEJBEwEgFDQRAEJBEwEgFDQR
      AEJBy6gSfHPgNI5th4gtTrDgi1LvKGP+Vh3AXEnIt0xLk6gEC/kjo0pwfU0VCVXC4XRgMBoI
      RhR6tjUyN+3mzPkBGhrqRCVYyCsZVYIHT58gUbWNxMIw9toWrIYk/tW5QIrZTjwWpatVVIKF
      /CEqwUJBExfBQkETASAUNBEAQkETASAUNBEAQkETASAUtLQDQNM0pkevEUrAwuw0Y5MuQj4v
      Q9duEo/4CMVTLCwuZrOvgqC7tKdCAFhlhVBCIxxVMKAx442ztaWC0dEpZgIKfXt2ikqwkFcy
      mgphtVgAUBSFhKJAMkkwGMVkMVFb4yQYCiPLMpIkZa3DgqCnDCbDJZkPgiE5S3NDDaGERHW5
      FZd7ida2GpKyBSUmdogR8ouYCiEUNDEKJBQ0EQBCQRMBIBQ0EQBCQRMBIBS0jAphKzRmpycI
      JSTqq8qYnPPS2eJEMdiIBLw4HQ79eykIWZJ5AGjg8/kJKxIyqqgEC3ltXSmQKhmxmWQSohIs
      5LnMzwCSREtDLaEE1FaViUqwkNdEJVgoaGIUSChoIgCEgiYCQChoIgCEgiYCQCho6wqARCzE
      lGuOVDK+8lWJkVA1wmExDCrkl8wDQNMYujKImtIYHZ2gzJRgYnyckQkXwZiahS4KQvas6wxg
      MBcjRQLEDUbKyopQ4gpu9zxWq1VMhRDyyroKYYvuGZbDynsnwxnLifgWcTqdohAm5A1RCRYK
      mhgFEgqaCAChoIkAEAqaCAChoIkAEAqaCAChoK3jpngI+xY5OzhGZ70d3+o2qQlTJaqSoKNZ
      bJQt5I+MzwCapjFweRAtESakyPR2t+FfCjJ0bZjmxlpRCRbyyroLYdMuF1aDhntxmaYGB6rF
      TsDroa1FbJQt5A9RCRYKmrgIFgqaCAChoIkAEAqaCAChoIkAEAqaCAChoK1vefSpCRZ8Ueod
      ZczfqgOYKwn5lmlpEpVgIX+s4wwg4XA6MBgNBCMKPdsamZt2c+b8AA0NdaISLOSVzAthmsbp
      t05gr23BakjiX50LpJjtxGNRulpFJVjIH6ISLBQ0cREsFDQRAEJBEwEgFLT7CgCxNqiQ79Z1
      R9gto6MTVFdYmRgfJ2YoxV5RTkmJXl0ThOy7rzOAbHz/2qCCkE/uaxg05POKtUGFvKZ7HSCV
      SqGqKrIsrq+Fze++rgHWIssymqZl7QyQzbNLttrWNA1N07LyoZDNtvPxb51p21n5mM7kjS3M
      zRBLJHVvW0ulcLlcpDI4waXdtpZicnyUkZFRlDT2BJEkKa0DVEupLMy7cbvdeJZ8afUl3bYB
      4pEg857ltB4Lmf0/RkN+3AsLBEMR3duem3GhqKm0H59J2znPU6qqqxg4f5org1eJ67jBjCTL
      lBebOHXqNCMTU/o1DESDPgKRBDU1Tgw6/gU1TcNiMZNMJlFV/XfbsRSVEl2e5Xz/JeYWvLq2
      7Zp141+ax+Wa0bVdAHuljXOn3+bajREyiIN7igR9+qdAmRoeGWP/4UfQkgqapF+7KVXBtejn
      A48cJpFI6NcwkFAUTEYD83OzNHVsxaLTmVySZcwmI1WOGkxG/T+bIgEPvphEQ2MjVRVlurbd
      3FBL/8AgXT1turYbCvgYm5iivaMTW3k5ko7HSHFZRe7PAEaSXL8xTCiuouf/uSQZiAaXGR4Z
      RTKY9WsYsJVXEouEiITDqDoOIUiSTCoRof/iADNzC/o1vCoc9BFLaoT8y5jN+v5NJqZm6N25
      k7Jii67tFpeU0drSjNVqwWy2IOsYALAJUiBkAxH/IoFQTN92tRSpeAjvchC9kwlJkmhqaWfH
      rt0U63wOtZaU47SXYzKZdG1X0zTKHU1sa6mltKJK17YBSq0mbt4cxrMc0LVd2WDAaDQS9S/i
      CaR3fZFR+7q3mKGiEhvFxcUYZJ1nZUtQXVOPEZWU3hO+JZnJsRuMjo6ldRGcCb93DlNZNYtz
      LmJx/VK3VDLO6VMnuXTlKoqS/qBDuhz1jXR1tBDw+3VvOxwKktDMVJTqX2jNeQCUFFspKyvF
      YNT31IkkU1RSTmlpCSad36WWUlHjYTy+kO5nF5u9jqB7lKiikdDxQDWYrBw4eJDmhhp8vvRG
      mDIRj0XxB8M4HNW6tru0OMeyP0gosEwkpujaNmShDpApLaWhIRONhMCu70QiTUuRioeJqega
      BJIkUe2sw+uPomcZMZWMc+qtk9gqytm6Yzc2HT/wVCXGxUuXqXY6qayw6dcwEAv7mZv3oGkq
      Bkuprm3bHXXYHXUk41ESWThcs3JHWCY887MsB8I46xopLy3SrV0tlWTJF6TKXqlbm7cMXb6I
      0VqKLMm0tndi0rGeo2ka7plJYpqFtnxbYEDTmF9YpKbGmeuepC3nKdCid4na2lqKrfqOSoDM
      5NhNhtMsVmViy5atmE0motEIul9eSBJ1ja35d/ADSFJeHfywCQKgrrYWv9+va767QqOoqJhE
      XEHS+V2Oj97E7XZjspZg0HlYTthYOb8GmJ6aIBgKElONdLbU6tbu/OwUXl+QEqNGKAEVOl5j
      N7d3Ub9aktSzMCNsrPHha/x/78PafaeEjAoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales/Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAa4klEQVR4nO3deUxc993v8fc5c2aBGYbNBgPGLDbYbCbGKxjvcRxncdo0zXKfRm3Sqya6
      ipJWatqrqyZS/+gfjdQ2VZc0N7f3JlUePc6iNE6butlsY5vFCzEGbMLihcWYHQaYgdnOuX+w
      eE/z6Ik9JOf7kiKFH4ezwHzOMpjfRzEMw0AIE1IURVEjvRNCRJIEQJiaBECYmgRAmJoE4Cq6
      rqPreqR3Q9wiEoCrGIZBOByO9G6IW0QCIExNAiBMTQIgTE0CIExNAiBMTQIgTE0CIExNAiBM
      TQIgTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTC2iATD0IIN9vYxOBPi8
      2bmMsJ/Bni4uDk/MjKAHffR1d3K+4wLDXj8z83sZ4SAj/d20t3fQNzxOWJ8aD3mH8EwaMxvG
      5xnC4wvcvIMTXwkRCoBBcLyX4xUf8tbbe/j07ODnLGoweuEzKvb8O7srz00NhSZpPnaQA9XH
      afi0mvf3VjEy/We8A2dr+eiTw5w8eYL9H++npW8MgPGW/RzpCgEQ9A1SfWA/Z/t9N/Uoxdyn
      RWSr4QBd7V1o83MpCoU/9+yvh3w0nGplcUEe3WNTeZ0Y7eFcr8767XeTEh3mXOW7VDaPcne+
      hc9OnCV3430ULrDTf/owB5raWbag6NIKjRAdjcfwJeRTtjD25h6nmPMicwWw2MkqWMmK/Czc
      DivKjZYzgvScPIgnYR156bEo0wtOjPVATDbz3TZULYrFRTkMt3QQnLzAxVAm2alOLKrGgswM
      jL5BJi6tkNHOWuouxFC2No8oyw23LEwiMleAL8AwDCZ72zjS52Tb9oXYus/Mfk4Ph9Fczks7
      744lxu8hFIBwrJvomfHoKGJ1g5k7/SPvvsxJxc7tDz9Mou3StoLB4OxcQIZhYLFYbvLRibli
      7gYg6ONIdQ1GVDat9bUw0IHnwij1bS7mGRDyTRBm+hLmHceraagWDWV8lEnACTDpZxwDCxAG
      1n7jv1MweoDqU+dYkrScGOvUFcBqtc5uNxwOy8RYJjJ33wZVrWTk5JESayMQCBAIhtHDQYLB
      MDZnAnh78AUNwMDT2YEldQG26PnEB7sY8E6N+4YG8Me6p8IAgEZa8UaW6C0crmsnIK9z04vI
      FcAIBxns7WJ43E933wDeyXZao4MkJafgtEww7AkTPy+erMJ1ZM18UXuAT7VkVuZloPvHSNBO
      U1lTS1bMJLUndTY/lISqKuQti6b6kwOMLU6g/fRZcko2X5lyi5P89RvpP1DFqQ43t2Um3PgZ
      5DKTk5O0tbWRkZFBTEzMlcdjGIyPj3Pu3Dk8Hg9Wq5WcnBwSEhLQdZ3PPvuMoaEhAFRVpaio
      CLfbTTgcpqOjg+7ubhwOBzk5ObhcLnp6eoiPjycqKopwOExnZyfx8fHExspD+5ctMgHQwwz1
      tHOu3w+uJJy6h3PtOo6YeYxdOEztwCJ2bIrHevkrNz6bsqVTd/eq3cXKjZs4XX+ariGNtXds
      Jc2uAAoLl29kta2esxcHSbutnLzMeQA4UgvJtU2t0BaTROma5Zz3hf71vhoGra2tvPnmmxw9
      epTnn3+eVatWXbNMVVUVVVVVOJ1OxsbGUFWVp59+Gk3T+N3vfkdycjIulwtN08jKysLtdnPk
      yBH27NlDfHw8hmGgKApFRUW888477Nixg5ycHDo7O3nppZf4/ve/LwG4CSISANXqILdkM7lX
      f0If5dPT81hftgzH1XvmTmeFe+YDBatzPsWlm65dt81J9vJSsq8adyQvJXP2IwVX8mIKv8C+
      BoNB6urq2LZtG16v97rLKIpCaWkp69evx+l04vf7+eUvf0lLSwvp6emkpaXxzDPP4HbPHgBj
      Y2Ps3buXxx57jJycHILBIIpy5bXI5/Oxe/duNm/ezOLFi7/A3or/rLn1EKy6Kdm4JtJ7cQWb
      zcaDDz4IwIcffnjdZRRFmX1xe71ejh8/jmEYZGVl0dPTw4kTJ/jTn/5EXFwc5eXlLFu2jNbW
      Vnw+H3V1dezdu5fMzEy2bt1KdPTUVS4cDrN3716cTifbt2+Xd6Zukrn7EPwV4/f7+e1vf8tD
      Dz3E22+/zX333UdSUhKZmZn86Ec/Ys2aNTgcDn79619z/vx5hoaG6OjowGq1snz5curr63nz
      zTdnnyeeeuop3njjDXbu3Immza3z1NeJfGe/JHa7nWeeeYYnnniCyspKXnvtNZ544gny8vLY
      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
    </thumbnail>
    <thumbnail height='71' name='Selector' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd3Rc1b3vP2eqRm1G3WqW5G7jbtwxiGBMsR1KcPISAnmkcBPIA0NiO7B4
      ISZ4BcJdL5Wy4htffIl5QLiQPGJwHGLL3ZZsS4ps2eq9S1M8mlGZct4fQsLGRZY0M2dmtD9r
      eXl05py9fzNzvmf/9t6//duSLMsyAsE4RaW0AQKBkggBCMY1QgCCcY0QwAiprq4e1XX9/f00
      NDT42Brf4XK5OHbsGF6vV2lTAooQwEV885vf5Pnnn+c73/kOLpfriue8/vrrAHR0dPD973+f
      5557joKCgmHLtlqtvPPOO5cdr62tZc2aNfz4xz/mT3/6E3v37sXhcIzIbqvVyrvvvnvF986e
      Pctrr702bBmvvvoqTU1NI6o3HNAobUAwYTQaef755/nhD3+IzWZj69atyLLMY489xvvvv4/b
      7cZsNgPgcDjo6enhq1/9KnPmzOF73/seOTk5XLhwgR/+8If84Q9/oLKykjfeeIOnn36a5ORk
      4uLi2L59OzU1NaSnp/P4448DcPvtt/Pwww/zyiuvYDKZWLp0Kffccw8ZGRloNBqampp4+eWX
      2b59Oy6Xi3Xr1vHee++Rk5NDTU0NN910E2+++SYpKSkcOHCAnp4esrOz+f73vw/A4EDf6dOn
      +eMf/4jL5eLll1/mtddeo6Kigscff5y//e1vLFu2jHvvvReVavw8F8fPJ70OrFYrDzzwADfc
      cAOdnZ3U19cTHR1NeXk5VquVF154gfj4eACysrL45S9/yZ49e9i1axcmk4lnn32Wnp4e7HY7
      LpeLjo4OTp8+zbJly9i4cSMAn376KTqd7hJ3aO/evezcuZMtW7YMHZs2bRqPPfYY06ZNY926
      ddTV1VFQUEBUVBQVFRVER0ezefNmVCoVt99+O2vWrGHVqlU4HA5+8YtfUFFRcdnn27NnDy+8
      8AJr167l+PHjOJ1OtFottbW15ObmsmnTJjSa8HkmFhQUcN9997FlyxbeeOONS94bbDXD59P6
      AJPJxM6dO3nqqadYuXIlSUlJREVFkZWVhSzLvPTSS1gsFgAqKirYuXMnfX19LFq0iH379vH8
      88+TmJhIWVkZ/f39mEwmsrKy2L59Oy0tLURERLBixQo6OjqYOXPmUL1r1qxh06ZN17QtKiqK
      WbNmodFomDZt2iU3eHR0NPn5+Rw5cgS9Xs9zzz3HpEmTht7fs2cPDoeD1atX8/zzz9PX18fG
      jRupq6sjIyPDx99i8CDLMjNnzmTevHlYrVY+/PBDTpw4QXR0NDk5Obz55ptIYiLsc7xeLyqV
      ClmWh9wGWZaHXAKv14skSUPnDHYYVSoVmzdv5qWXXrrsXEmSuPgrliTpsnKuVIcsy5dcK0nS
      ZTaqVKqhvwdtGSxfpVINXX+xnRfb9UUbB1+HC/n5+bz//vssXbqUmpoaKioqSE1NpbW1lRde
      eIGdO3eKFuBiBm/Cq90IarV66LUkSZf8/eijj17y9xfPvVY5F79/sQ3Xunbw+OD5F/vt17Lz
      em0MFyorK9HpdBiNRnJzcyksLGTWrFlDraZoAQKM0+kkMjJSaTPGBbIs4/F4gM/F7vF4UKlU
      qFSqgddKGjjeKCsr4+2336aqqory8nL27t079N7Ro0fJy8ujq6uLEydOUFBQgNVq5c9//jMA
      O3bsGPHw6HhHkiQ0Gg0ajWaopdVoNEOtpVqtFgIIJN3d3eh0OjIzM5kyZQo6nW7oPZvNhtvt
      RqfTsXjxYhwOB/39/XR0dNDT00NbWxtut1tB68MTIYAAMn/+fCZNmsTu3bsvG2tfvXo1ubm5
      HDp06JL35s6dy65du1i0aFGgzR0XiE5wAKmvr6e4uJjbb7+ds2fPYjabqa+vx2w2I0kS7e3t
      rFy5kiNHjmA2m/F4PEydOhVJkkhPT0ev1yv9EcIO0QkOMDabDaPRqLQZgs8QAhCMa4QLFGBk
      Webo0aNDnV2AI0eO4Ha7WbVqFRaLhfr6eqKioujt7SUtLQ2tVitaDT8hOsEBxmq1IkkSFosF
      p9MJQElJCVlZWahUKgoKCmhubqapqYmuri5Onz49FIAn8D3CBQowsiyzb98+Kisr+frXv05s
      bCz9/f0cOHAAt9tNd3c3DQ0N3HXXXZw9exaPx4PJZGLNmjVBO1vrdvXQ5+yg19GKq9eGq+8C
      fT1mPG4nHncPsteD19NPfMS3kNQSkkqFSi2h1mlQ67WodWo0ETo0Bi1agw5JFbjPKVygACNJ
      ElqtlkmTJuHxeKiqqqKmpobu7m7uuusuJEni+PHjzJgxA7vdjk6no6WlRWmzAXD1XcBurqDb
      Wo29q5xuSzVOeyN9zg5k2QvytRfTqGLuvnYF0mffT6QOXUwEemMkEaaBf7rYCFRq3zssogUQ
      XJWe7hYsrUVYWk5hbf8Xdkslsnf0k3ETY7aP+lqVRkVEXBSRSTFEJkYTmRyDWjv257doAQRD
      eD39mFtO0dWcT0f9QbotVQNP9iDA6/bi7LDj7LADIKkkDIkxRKcaiUk3EWEcXXyVaAHGOYM3
      fUvV32mvz6O/x38d7rG0AMOhNxqISTMROzEeQ3z0dV8nBDBOcV5ooOH8hzRX7qa3OzB9DH8K
      4GIi4iKJm5xM7MR4NHrtNc8VAhhHyLKX9rqD1Ja8haX1VMDdm0AJYBBJrSI2M56EGRMwxEVd
      8RzRBxgHeNx9NJZ9SN2ZXThsdUqbEzBkjxdbbSe22k4ik2JInJVGdKrxkuFk0QKEMYM3fnXR
      DnodrUqbE/AW4EoYEqJIuiGd6DTTwBoBIYDww+tx0Vj2IVVF/0Fvt/I3/iDBIIBBDAlRJM/J
      EAIIJ2TZS2fDEcpP/p4LneeUNucygkkAg4g+QJjgsDVw/vi/016XB4hn2vUiBBDieD391Je+
      R/nJV/G4xJrhkSIEEMKYu+o5d2AzFzpLlTYlZBECCEG8sszuY+W8/2k+6xPriRK/4qgR6wFC
      DFt3L9v+6yD/8bdCrL1aDnTdpbRJIY0QQAhRVt/Jj17by8myz0MX6numUmqfr6BVoY1oPEMA
      ryyzt6CKHbsL6XN5Lnv/mPk2MiJqiNXaFLAutBEtQJDj9njZsbuQN/5y8oo3P4BL1pPXtQ6v
      HJwrxoIZIYAgxtHbzyv/9ygfHS0fdmS/uTeLM3aRPGukCAEEKRZ7Dz/7zwMcL2287mtOWG7F
      0h/vR6vCDyGAIKTL5uR//3E/5Q1dI7rOI2vZ37leuEIjQAggyGizdPPTHXk0tF8Y1fXt/ekU
      2lb42KrwRQggiOi64ORn/3mAxo7R3fyDnLKupKMvxUdWhTdCAEGCtbuXn/4xj+ZO+5jL8qJh
      f+c63LJ6+JPHOUIAQYCz18XWN8f+5L8YsyuFU9abfFZeuCIEoDAut4eX3z5MdbPF52UX2ZbT
      2pvu83LDCSEABfHKMm/8v1MUVbb5pXwZFfs71+PyXjszwnhGCEBB/juvlE9PVvu1Dps7nuOW
      W/1aRygjBKAQRZWt7Pq0JCB1nbUvorEnOyB1hRpCAArQau7m/7x7jMCtxpbI67ybfq9u+FPH
      GUIAAabf5eHf3zmKzdEX0Hq7PSaOmG8PaJ2hgBBAgHln3xkqGpXZ8KKsey61zimK1B2sCAEE
      kJLqNj44qGS6EokDnXfj9Iid6gcRAggQjp5+fvdBfgD9/ivT443mcNcaZY0IIoQAAsSuT0to
      MwdH2pJq50wqumcpbUZQIAQQAM7VdfDJ8UqlzbgIicPmO3C4rz+PfrgiBOBnXG4Pb/z1FF6l
      fZ8v0Oc1kNe1VnGXTEncklsIwN/sya+ittWqtBlXpKFnMue6FyhthiJ48VKSXiwE4E9sjl7+
      vP+s0mZck2PmL2FzmZQ2I6AM3vxtxlYhAH/y3r7SgE94jRSXrOdA19pxs4xSRqZswjlaTM2A
      6AP4jTZzN38vCKaO79UZyChxo9Jm+B0ZmfLkMuria4eOCQH4iff2n8XlDo4tRq+HE5ZcLP0J
      SpvhV2oTqqlJrIKLGjshAD/Q3GnnQFFo7cXlkbXs61yPRw7PW6I+rpaylPOX3PwgBOAXPjx0
      HpcndJ7+g3T0p1FkW660GT6nJbaZ0tSzl938IATgcyz2HvYX1ihtxqg5Zb0prDJKtEW3UpJe
      fMWbH4QAfM7f86tCyvf/Il7U7O9cHxYZJcyRXfwrowiv6uq/hxCAD+l3efj4RIXSZowZsyuZ
      k5ablTZjTFgNFk5PPIlHfeWEwoMIAfiQI2fqsXUH97j/9VJ8YSktvZlKmzEqunXdnJ54Erfa
      Pey5QgA+5J+nQtf3/yIyqpBcRunUOjiZdYJ+Tf91nS8E4CPazN2cqW5X2gyfYnMncMKSq7QZ
      102vppeTWQX06nqv+xohAB/x6anqsNyd96x9YUhklOhX93MqKx+nfmRrLoQAfIAsyxz+V73S
      ZvgJFXmda+nz6pU25Kq4JTenJxZgjxh5XlUhAB9Q22qluatbaTP8RrfHyJEgXUbpkdwUTjyJ
      NXJ0IedCAD7gSEmD0ib4nXLHbGoc05Q24xK8ePlXejFd0SPbSORihAB8wIlzTUqbEAAkDnbd
      SU+QZJTw4uVsWgltxtYxlSMEMEYs9l4a2sbH9qQ93mgOdd2htBlDMf1Ncde/f9rVEAIYI4UV
      LWE5+nM1qp0zKe++QbH6ZWQqvhDTPxb8JoD29oExcafTid1up62tDa/30piMgoICPJ7Pp6qd
      Tifl5eWUl5fT1DS8W9He3k55eTkXLly6sYTL5aKr68p+YVlZGRaLZeh6s3kgS5vZbB6y+Ur0
      9PRQXFx82fGiyrE1waHIEfMaut0xitRdG19D9Rdi+seC3wSwdetWAPLz89mzZw+nTp1ClmXs
      djt1dXV0d3fz17/+lba2Njo6OgCw2+0cPHiQH//4x1RUVOB2u6mqqqK/vx+Hw0FbWxvNzc1D
      dWzbto2jR4+yefNmKisr6ejowGazYTabOXPmDF6vl+rqanp7ByZGmpub2b1791AZ27Zt41e/
      +hUAv//979m2bRtWq3VIQB6Ph5aWFhobG7Hb7Xz88cdUV1fj8Xjo6OjAYrFQUtlCb7eVPueA
      CN39vTit7ciyTL/TTp/DRn+vg54LXXhcfXjcLhyWVjyu0A2Z6PMaONB1N3KAl1HWx9VRNuGc
      z25+AI3viroUu93O9u3bKSsrY+nSpRw6dIhbbrmFjRs3snjxYnp6evB4POzevZu8vDx27dpF
      SkoKGzZsoKqqitzcXLZu3Up6ejrnz5/n1ltv5fDhw9hsNp588kmmT5+OWq3m61//Orm5ubzz
      zjs0NzeTk5PDnXfeSX5+PmfOnEGr1VJfX8+aNWv45JNPMJvN3HHHgB+rVqvR6/U4nU4iIyOx
      Wq3s2rWLtWvX8qc//YkHHniAbdu2sWLFCu69915OnjxJb28vN954I3v27CEhJZ3y8z201/wL
      r8dF1vzbqD65h9ikDCRJTc+FTiLjUmg5f4LU6Utw2jqRJNBHxxGblElC5gx/ff1+ZyCjxDxm
      xRQFpL6W2GbOXSWmfyz4rQUwGAzcfffdLFu2bOhYa2srs2fP5v7778ftdqNWq3n44Ycxma6c
      lcBms/Hd7353yHW64447WL9+PRUVl0Zcms1mYmNj0Wq1PPHEEyQkDCzty8/Pp6mpCa1WS35+
      Po8//jjLl1+64GPFihX87ne/u8RO+bNkOYmJiaxYsYLCwkIcDgfLli1j7dq1dHV1odfrWXPv
      gzisbWTOuZnU6UswN5VjiIkje+EaHJZWJElFxg03EWlKJmP2KjyuPlKnL6Gv24LD3DL2L1lh
      jplv40IAMkq0R7dRkl6MLPm+t+U3AaSmppKenk5mZibR0dEkJCSQkZFBTU0Nr776KsDQjZqU
      lPS5QSrV0PHFixfzzDPPMH36dADeeustPv74Y2655RYATCYTL774Iu+99x4PPfQQycnJqNVq
      1Go1JpOJr33ta/T09JCUlMRdd93FL37xC06cOIFONxDglZiYyNKlSyksLGTRokUkJiYya9Ys
      fvvb31JVVYXNZqOxsZHIyEj0ej0mk4mIiAhiYmJISUmhsslCypSF1BX+k5ayfFKnLQagdP/b
      pExZiNYQjSRJ6CJjP/s/BntnE7IMam3wzqxeLy5Zz77OdX51hcyRZoozCq8Z0z8WJFkOXG4w
      t9vN66+/TltbG6tWrRpyRa6H3bt3ExUVRW5urv8MHCE/3bGfYj/t7xVKLIv7J/ONJ4Y9b2LM
      9hGVa42wciorH5fGNVrThsVvfYArMeize73eS57618OXvvQlVKrgGrWtHyfj/8NRYL2ZiYYq
      4nWdPivToevmdFaBX29+CPA8gCRJJCYmkpycjCSNrNk0GAzo9dd2GwaHNwPBBUcfFvv1h92G
      Mx5Zy/7OdT7LKDEQ059/3TH9YyG4HqljID8/nw8++IDa2lo8Hg/btm3D7R5YEVRQUMA///lP
      bDYbn3zyCYcOHaKhoYG33noLgBdffJG+vpENSzZ1+m5T63DAVxklejW9nMoqoEfX4wOrhids
      BBAVFYUsyxiNRo4dOzbUcQYoLi7G7XbT2to61Lnt7e1FlmU6OjqGbVmuRIfV6Uvzw4KxZpTo
      V/dzemIBjhHG9I+FsBFAWloaM2fOJC8vj+bmZqqrq6mrq8Nut5OUlMTNN99MRUUFWVlZJCYm
      0tXVxZw5c3jvvfeYO3fuiOtrNYdv+PNo8aJmX+eXcXtHnlHCI7k5nXmSC4bAtqwB7QT7E5fL
      xZkzZ7j//vtJSkqiqamJ1NRUqqurufnmm8nPz2f16tU0NjZis9mGWgiDwYDRaESjGdlX0WkT
      LcCVsLiSKLDewvL4fdd9jUfyUJh5GmtU4PpwgwR0GNTf9PX1jcqdGQ0v/tdBCs43D3/iOETC
      y5cn7CI14tJ1ElcaBvVKXv6VXkjrGMOaR0vYuEBAwG5+ALvT/yMUoYr82TJKl1c7zHkyZ1NL
      FLv5IYxcoJaWFkpLS4mLi8Pr9dLa2sqtt95KVFQUJSUltLS0MGvWLM6dO4dOp2Py5MkUFxez
      evVqampqmDFjZHE5dmfoBrMFAps7nmOW27g5Yc8V35eRKUvxTUz/WAibFiAxMZElS5bQ1NRE
      c3Mzt9xyC0eOHAFgypQpmEwmOjo6qK+vJyYmhsrKSpKTk8nLy6OpqWloyPR66e4RLcBwlNoX
      0NCTc9lxGZmqpApqE5XPoxQ2Aujq6mLfvn3ceeedzJkzh5MnT6LVft4ER0ZG4nA4eOSRR3A6
      nWRnZ9PZ2YnZbCYjI4Nz50a2gXWf69op9wQAEnmda+n1RFxytDahmsqk4EghGTYCqK2tJTY2
      lvLycpxOJy6Xi5UrV1JUVMSZM2dob28nIyODvLw8HA4HmZmZZGZmsm7dOsrLy8nJufxJdS3c
      IZj+XAkcnliOmlcP/d0a00J5SpnPw5pHS1iNAgWSe559R2kTQgiZO5L+mxsn/oATOccCEuJw
      vYRNJziQeMTTf4RInHWsRhWg+J6REDYuUCBRq8XXNhKSIvp5craZOCkw8T0jQfySo0SrEV/d
      9RCp9vDc/AamGXvJCa6HPyAEMGq06tDfQcXfqCWZp+c0kR0zMGeSEoQDZ0IAoyRCJ7pP10bm
      4altLE76PGgw1QWqIBtyEQIYJdGG0No4ItDckWHhnonmS47pgJSRzTf6HSGAUWKMDv1F7f5i
      Tlw3j05v5UqL/iYIAYQHMZFCAFciLbKPTXObuNoYQYRwgcKDuJiI4U8aZ0RrPDw7rwGj7uq9
      3fgg6wgLAYyS5LgopU0IKrSSl6fnNJEZfe2xzjThAoUHKSYhgM+R+da0dhYlDr9MNNYLUUE0
      kS4EMEqS44UABlmXaWZdpnn4Ez8jw7+pfkaEEMAoyUiKRTXC3EbhyMIEO49Ma7viiM/VEAII
      A/RazbjvB0yM6uXp2Vcf8bkawTQXIAQwBrJT/Z8ZOViJ0bp5Zl4jMbqRO/QpHtAGST9ACGAM
      ZKUYlTZBEbQqL5vnNpIWNbroNhWQHiStgBDAGJgxMVFpExRA5nvTW5kbP7a8SMHiBgkBjIFp
      mQkj6vyFA/dldXFHxug2pb4Y0QKEAdEGHZnJ48cNWpJ0gW9OufpGgiMh3QV+2PBlxAgBjJEb
      ske2z0GokhPdy1Ozm0c84nM1dEBCEIRFCAGMkSUz05U2we/E6Vw8M6+BSI1vh26CISxCCGCM
      zMxKRK0K346AVuVly7xGUiJ9P3uVGQQTYkIAY8Sg1zIzKzzdIAmZH8xoYabJP4vZRQsQJiy/
      IUNpE/yAzP3ZndyW7r990GK9EKnwhJgQgA9YPjsz7IZDlyfbeXByh9/rUdoNEgLwAQmxhrBy
      g6bG9vDkDU0EIv2R0oFxQgA+YuXsTKVN8AkJehc/mdeAQROYQfpkhYdChQB8xK0Ls9GGeMa4
      CLWHn8xrIDEicL3TCW7QKjghFtq/WBARFaFjWQh3hiVkHp/VwjRjYPc+VjEwK6wUQgA+5PYb
      JyltwiiR+R+TOrh5gjJ7HycrOBwqBOBD5k5OISMpRmkzRsxNKRf46qROxerPEAIIDyRJ4t5V
      M5U2Y0RMNzr5X7OaUXIyW8nAOCEAH7Nq7kRiIkMjbWKC3sWWuY1EBGjE52ooGRgnBOBjInQa
      1q+YprQZwxKh9vDc/HoSAjjicy2UCosQAvAD65ZPC+rkuWpJ5qnZTUyKDZ6tXpWaEBMC8ANR
      Bh3rVwZrKyDz4OR2liUPn8QqkIgWIMxYv3waxqjgS6D7pVQb92d3KW3GZRgVCowTAvATUQYd
      G3JnKW3GJcw0OXlsVkvQBu4p4QYJAfiRu5dNJT1I5gVSDP1sntuINti2aLkIIYAwQ61W8chd
      85U2gyiNh2fmNRCvD44Rn6uhxB5iQgB+ZvGMdEXXDWskL0/e0EROTPCM+FyNCW4I9JSEEEAA
      eHT9Qgx6JTbVk3loajtLg2zE52ooERgnBBAAkkxRPLRmXsDrXZNu4d6s609bHgwEOmOcEECA
      uHPpZGbnJAesvnnx3Tw6ozVg9fmKQGeMEwIIEGqViicfWEpUhNbvdaVF9vGjOU1oQ/DXDXRg
      XAh+RaFLclwU//blRX6tI1rj5plhNqoLZvQENjBOCCDA3DI/m9sW5filbLUk86M5TUwcZqO6
      YCc1gG6QEIACPLp+EdkTfL25hsx3prWyMNHh43IDTyBTpQgBKECETsNPHlzp04jRtZlm1k60
      +Kw8JQlkYJwQgEKkJsTw9FeX+ySv6MBGdb5JWx4MGL1gCFBgnBCAgiyanjrmTnFmVO9nIz7B
      G+MzGgLlBgkBKMwdS6Zw36oZo7o2Vuvm2fkNRAfLjnM+JFCBcUIAQcBDd8zlSwtHNjKklmQ2
      zW0kzQ9py4OBQGWMEwIIAtQqFY/ft3gEWaZl/m1Gy5g3qgtmAhUYJwQQJGjUKp7+6nLmT5kw
      zJky90z0zUZ1wYyawATGCQEEETqtmme/eRNLrxE+vTixm2+F0YjPtQhExjghgCBDr9Ow+Rsr
      yV2Qfdl7OdG9PD2nCXWQLmn0NYHIGCcEEIRo1Cqe+MoS7lwyeeiYSefi2fm+36gumAlEYJwQ
      QJCiVqn4wb2L+Z93zkOvltkyt5FkQ3iO+FwNPRDv59EgSZbl8JpBCUPa68pJrn0XvONLAAB7
      o6Akwn/lixYgBEjOmgYLvwOGeKVNCTj+nhATAggVYtJg0aMQP1VpSwKKvwPjhABCCW0kzH0Q
      cm4DlRKL7AOPyc+BcUIAoYakguxbYOF3ISpwa4yVxJ9ukBBAqDLoEqUvBcJ7YsCfkaFiFCgc
      uNAIZR9Bd4vSlviFJg28Y/RP2UIA4YLXDQ3HoO4AeEJ7TfAX8QC/jwe3Hxo6IYBwo88OtXnQ
      fBIIn5/2zzFQ7+M9R/SqCCGAsKW7bUAIHaWEgxAORkKBwTdlaVU65ics4caklUIAYU9362dC
      OEcoC6FKC3+JHVsZWpWOefGLWZS0gmjtQNp6IYDxQncrNB6HtpKQDKnok+DVOJBH0Q+I0sQw
      J34hCxKXEamJuuQ9IYDxRp8dWk4P9BH6bEpbMyLeNELXdc7/SUikGNKZm7CImaa5aFRXTkkp
      BDBekWUwV0BrEXSWhUSr8PcoODNMYFyUJpppptnMiVtEkiFl2DKFAATgckJX+ef/gnQYtVQH
      n1xhx6lITTTTjLOYapxFelQWakl93WUKAQguxdMP5iqw1kJXGfRYCJbOs1UFf4wDlaQmxZBK
      dsxUJkZPIjUyY0Q3/cUIAQiuTY8F7E1gawBbPTjaBibdAoYEGv1A6IdxItUJ6aRGZmLQRPqm
      dCGA4MXtdqPRKBP1edW6vR7o6QJH+8BcQ68Feq3Qa4N++0DfYkQtxmfDOio16GMhwjTwLzIR
      IpMGAv4iTPhrb1chgCCitLSUX//616SlpbFhwwbefPNNXnnllRGXU1dXx+uvv45KpWLjxo0k
      J488anTTpk0jr9vrBlcPuHsG/vf0D3SuvR6QvQPiUGtAUg+Ec2sNoIkAjWHgtRT42EwhgCAi
      Pz+fkpISHnroITQaDY888giTJ08mJyeHpUuXsn37dkwmE0888QRbtmzBYDCwYcMGDh48yKZN
      m/jNb37Dxo0b2blzJxEREXzlK19BkiReffVVrFYrkyZNwu12s2HDBt566y0eeughfvnLX2K1
      WvnZz37GG2+8gcPh4NFHH+XJJ59k/vz5zJ07l/vuu0/pr8ZviHDoIOPjjz/mlVdeoaGhgeTk
      ZH76059y6tQpdu7cydatW4mLi6OsrIy0tDS+/e1vc+rUKbxeL5988glG40DI5De+8Q3cbjff
      /va3qaiooLW1lS1btnD+/HkaGxtxu93U1dUBkJycTGtrK0VFRbS3t6PX64mNjWXKlCn85Cc/
      4dChQ0p+HX5HCCDImDRpEkuWLCEiIgKbzcZf/vIXNBoNU6ZM4e2336aoqOgyl+bBBx/kqaee
      GnpSHz16lOjoaCZMmIDD4aChoYGPPvoIj8eDVqtl9+7dlJaWUlRURF1dHTk5OT6aP7kAAAKZ
      SURBVMiyzIIFC9BoNOTn5yvx0RVBuEBBhN1up7i4GIAZM2bQ399PfX09CxcuRKvVUlxcTGpq
      KgkJCbS0tJCQkIDNZiM2Npaf//znvPTSS8BAB7awsJCkpCSys7NpaWmhs7OTd999l2effZbS
      0lISEhLIysoaOs9oNGI2m7HZbMybN4/a2lqysrKGBBKuCAGEAbt27eLWW28lLS3tque43W4O
      Hz5Mbm5u4AwLAYQAQhhZlpH8NDw4XhB9gBDl3Llz7NixA4vFwtGjR/nHP/6BxzOQRu3w4cPs
      3bsXj8eDxWLh2LFjlJWVUV1djSzLfPTRRwpbHzwIAYQopaWlLFiwAJPJxIIFC1CpVNhsA9Gd
      K1aswOv1YrPZOHHiBGazmZaWFmpra6mvr6eqqkph64OH8ZFcJgy555572LFjB7IsY7PZSExM
      JD4+HlmWaWhowOVykZ+fT3t7Oy0tLSxatAi9Xk9VVRVTp46v5FrXQgggRCksLMTlchEbG0tR
      UREqlYquri46OjpobGxEpVKxfPlyjEYjx48fJyIiguzsbI4fP05CQoLS5gcNohMcwjQ1NZGe
      fvXNNATDIwQgGNeITnCIIssyTU1NQ68rKyuHXh86dIj9+/dz4cIFSktLqaurw2azUV1djcfj
      wWoN7/3FRoIQQIhSW1vL8ePHAaiqqmL37t0ASJLEqlWr8Hg89Pb2EhsbS0FBASdPnqS6upr8
      /Hz0er2SpgcVQgAhSk5ODgkJCXi9XioqKpgyZQqD3uzgzZ+UlERNTQ0ZGRlDYRPl5eV88MEH
      Q3MG4x0hgBClvLycoqIiysvLMRgMlJSU0NjYyLlz5zh69CgrVqygubmZ06dP4/F4mD9/Pkaj
      kenTpwMgun4DiE6wYFzz/wFXurEC4OOHdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
